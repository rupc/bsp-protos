// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bsp_transaction.proto

package bsp_transaction

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChangeTriggerCode int32

const (
	ChangeTriggerCode_INVALID_SIGNATURE ChangeTriggerCode = 0
	ChangeTriggerCode_EdgechainSafety   ChangeTriggerCode = 1
	ChangeTriggerCode_EdgechainLiveness ChangeTriggerCode = 2
	ChangeTriggerCode_MainchainSafety   ChangeTriggerCode = 4
	ChangeTriggerCode_MainchainLiveness ChangeTriggerCode = 3
)

var ChangeTriggerCode_name = map[int32]string{
	0: "INVALID_SIGNATURE",
	1: "EdgechainSafety",
	2: "EdgechainLiveness",
	4: "MainchainSafety",
	3: "MainchainLiveness",
}

var ChangeTriggerCode_value = map[string]int32{
	"INVALID_SIGNATURE": 0,
	"EdgechainSafety":   1,
	"EdgechainLiveness": 2,
	"MainchainSafety":   4,
	"MainchainLiveness": 3,
}

func (x ChangeTriggerCode) String() string {
	return proto.EnumName(ChangeTriggerCode_name, int32(x))
}

func (ChangeTriggerCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{0}
}

// BspTransactionType is assigned to each BspTransaction before it is executed.
type BspTransactionType int32

const (
	BspTransactionType_IntraTx BspTransactionType = 0
	// InterTx_ShouldLock
	BspTransactionType_InterTx            BspTransactionType = 2
	BspTransactionType_InterTx_ShouldLock BspTransactionType = 3
	// InterTx_NoLock
	BspTransactionType_InterTx_NoLock BspTransactionType = 4
	BspTransactionType_MCAuditTx      BspTransactionType = 10
	BspTransactionType_ECAuditTx      BspTransactionType = 11
	BspTransactionType_NewView        BspTransactionType = 20
	// deprecated types
	BspTransactionType_SyncTx BspTransactionType = 30
	BspTransactionType_None   BspTransactionType = 100
)

var BspTransactionType_name = map[int32]string{
	0:   "IntraTx",
	2:   "InterTx",
	3:   "InterTx_ShouldLock",
	4:   "InterTx_NoLock",
	10:  "MCAuditTx",
	11:  "ECAuditTx",
	20:  "NewView",
	30:  "SyncTx",
	100: "None",
}

var BspTransactionType_value = map[string]int32{
	"IntraTx":            0,
	"InterTx":            2,
	"InterTx_ShouldLock": 3,
	"InterTx_NoLock":     4,
	"MCAuditTx":          10,
	"ECAuditTx":          11,
	"NewView":            20,
	"SyncTx":             30,
	"None":               100,
}

func (x BspTransactionType) String() string {
	return proto.EnumName(BspTransactionType_name, int32(x))
}

func (BspTransactionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{1}
}

type CommitEventReplyType int32

const (
	CommitEventReplyType_Speculative CommitEventReplyType = 0
	CommitEventReplyType_UP_TO_DATE  CommitEventReplyType = 1
	CommitEventReplyType_BFT         CommitEventReplyType = 2
	CommitEventReplyType_BFT_TX      CommitEventReplyType = 3
	CommitEventReplyType_TSA         CommitEventReplyType = 4
	CommitEventReplyType_Early       CommitEventReplyType = 5
)

var CommitEventReplyType_name = map[int32]string{
	0: "Speculative",
	1: "UP_TO_DATE",
	2: "BFT",
	3: "BFT_TX",
	4: "TSA",
	5: "Early",
}

var CommitEventReplyType_value = map[string]int32{
	"Speculative": 0,
	"UP_TO_DATE":  1,
	"BFT":         2,
	"BFT_TX":      3,
	"TSA":         4,
	"Early":       5,
}

func (x CommitEventReplyType) String() string {
	return proto.EnumName(CommitEventReplyType_name, int32(x))
}

func (CommitEventReplyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{2}
}

// EventUnit defines that this event is whether block-based notification or tx-based notification
type EventUnit int32

const (
	EventUnit_Block EventUnit = 0
	EventUnit_Tx    EventUnit = 1
)

var EventUnit_name = map[int32]string{
	0: "Block",
	1: "Tx",
}

var EventUnit_value = map[string]int32{
	"Block": 0,
	"Tx":    1,
}

func (x EventUnit) String() string {
	return proto.EnumName(EventUnit_name, int32(x))
}

func (EventUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{3}
}

type AuditType int32

const (
	AuditType_EC      AuditType = 0
	AuditType_MC      AuditType = 1
	AuditType_UNKNOWN AuditType = 99
)

var AuditType_name = map[int32]string{
	0:  "EC",
	1:  "MC",
	99: "UNKNOWN",
}

var AuditType_value = map[string]int32{
	"EC":      0,
	"MC":      1,
	"UNKNOWN": 99,
}

func (x AuditType) String() string {
	return proto.EnumName(AuditType_name, int32(x))
}

func (AuditType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{4}
}

type OrderingMethod int32

const (
	OrderingMethod_IndexBasedOrdering           OrderingMethod = 0
	OrderingMethod_DependencyGraphBasedOrdering OrderingMethod = 1
)

var OrderingMethod_name = map[int32]string{
	0: "IndexBasedOrdering",
	1: "DependencyGraphBasedOrdering",
}

var OrderingMethod_value = map[string]int32{
	"IndexBasedOrdering":           0,
	"DependencyGraphBasedOrdering": 1,
}

func (x OrderingMethod) String() string {
	return proto.EnumName(OrderingMethod_name, int32(x))
}

func (OrderingMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{5}
}

type ConsensusState_Result int32

const (
	ConsensusState_Commit ConsensusState_Result = 0
	ConsensusState_Abort  ConsensusState_Result = 1
)

var ConsensusState_Result_name = map[int32]string{
	0: "Commit",
	1: "Abort",
}

var ConsensusState_Result_value = map[string]int32{
	"Commit": 0,
	"Abort":  1,
}

func (x ConsensusState_Result) String() string {
	return proto.EnumName(ConsensusState_Result_name, int32(x))
}

func (ConsensusState_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{34, 0}
}

type ConsensusState_Level int32

const (
	ConsensusState_EC_Spec                ConsensusState_Level = 0
	ConsensusState_EC_Ordered             ConsensusState_Level = 1
	ConsensusState_EC_Prepared            ConsensusState_Level = 2
	ConsensusState_EC_Commit              ConsensusState_Level = 3
	ConsensusState_MC_Ordered             ConsensusState_Level = 4
	ConsensusState_MC_Commit              ConsensusState_Level = 5
	ConsensusState_MC_Progress            ConsensusState_Level = 6
	ConsensusState_TSA                    ConsensusState_Level = 10
	ConsensusState_EC_ViewChangeTriggered ConsensusState_Level = 21
	ConsensusState_EC_ViewChangeFinished  ConsensusState_Level = 22
)

var ConsensusState_Level_name = map[int32]string{
	0:  "EC_Spec",
	1:  "EC_Ordered",
	2:  "EC_Prepared",
	3:  "EC_Commit",
	4:  "MC_Ordered",
	5:  "MC_Commit",
	6:  "MC_Progress",
	10: "TSA",
	21: "EC_ViewChangeTriggered",
	22: "EC_ViewChangeFinished",
}

var ConsensusState_Level_value = map[string]int32{
	"EC_Spec":                0,
	"EC_Ordered":             1,
	"EC_Prepared":            2,
	"EC_Commit":              3,
	"MC_Ordered":             4,
	"MC_Commit":              5,
	"MC_Progress":            6,
	"TSA":                    10,
	"EC_ViewChangeTriggered": 21,
	"EC_ViewChangeFinished":  22,
}

func (x ConsensusState_Level) String() string {
	return proto.EnumName(ConsensusState_Level_name, int32(x))
}

func (ConsensusState_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{34, 1}
}

type Version struct {
	BlockNumber          uint64   `protobuf:"varint,1,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	TxOffset             uint64   `protobuf:"varint,2,opt,name=TxOffset,proto3" json:"TxOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *Version) GetTxOffset() uint64 {
	if m != nil {
		return m.TxOffset
	}
	return 0
}

type VersionedValue struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Version              *Version `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionedValue) Reset()         { *m = VersionedValue{} }
func (m *VersionedValue) String() string { return proto.CompactTextString(m) }
func (*VersionedValue) ProtoMessage()    {}
func (*VersionedValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{1}
}

func (m *VersionedValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionedValue.Unmarshal(m, b)
}
func (m *VersionedValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionedValue.Marshal(b, m, deterministic)
}
func (m *VersionedValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionedValue.Merge(m, src)
}
func (m *VersionedValue) XXX_Size() int {
	return xxx_messageInfo_VersionedValue.Size(m)
}
func (m *VersionedValue) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionedValue.DiscardUnknown(m)
}

var xxx_messageInfo_VersionedValue proto.InternalMessageInfo

func (m *VersionedValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *VersionedValue) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type StateBatch struct {
	Key                  string          `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	VV                   *VersionedValue `protobuf:"bytes,2,opt,name=VV,proto3" json:"VV,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StateBatch) Reset()         { *m = StateBatch{} }
func (m *StateBatch) String() string { return proto.CompactTextString(m) }
func (*StateBatch) ProtoMessage()    {}
func (*StateBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{2}
}

func (m *StateBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateBatch.Unmarshal(m, b)
}
func (m *StateBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateBatch.Marshal(b, m, deterministic)
}
func (m *StateBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateBatch.Merge(m, src)
}
func (m *StateBatch) XXX_Size() int {
	return xxx_messageInfo_StateBatch.Size(m)
}
func (m *StateBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_StateBatch.DiscardUnknown(m)
}

var xxx_messageInfo_StateBatch proto.InternalMessageInfo

func (m *StateBatch) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StateBatch) GetVV() *VersionedValue {
	if m != nil {
		return m.VV
	}
	return nil
}

type KVRead struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Version              *Version `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVRead) Reset()         { *m = KVRead{} }
func (m *KVRead) String() string { return proto.CompactTextString(m) }
func (*KVRead) ProtoMessage()    {}
func (*KVRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{3}
}

func (m *KVRead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVRead.Unmarshal(m, b)
}
func (m *KVRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVRead.Marshal(b, m, deterministic)
}
func (m *KVRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVRead.Merge(m, src)
}
func (m *KVRead) XXX_Size() int {
	return xxx_messageInfo_KVRead.Size(m)
}
func (m *KVRead) XXX_DiscardUnknown() {
	xxx_messageInfo_KVRead.DiscardUnknown(m)
}

var xxx_messageInfo_KVRead proto.InternalMessageInfo

func (m *KVRead) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KVRead) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KVRead) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type KVWrite struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Version              *Version `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVWrite) Reset()         { *m = KVWrite{} }
func (m *KVWrite) String() string { return proto.CompactTextString(m) }
func (*KVWrite) ProtoMessage()    {}
func (*KVWrite) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{4}
}

func (m *KVWrite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVWrite.Unmarshal(m, b)
}
func (m *KVWrite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVWrite.Marshal(b, m, deterministic)
}
func (m *KVWrite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVWrite.Merge(m, src)
}
func (m *KVWrite) XXX_Size() int {
	return xxx_messageInfo_KVWrite.Size(m)
}
func (m *KVWrite) XXX_DiscardUnknown() {
	xxx_messageInfo_KVWrite.DiscardUnknown(m)
}

var xxx_messageInfo_KVWrite proto.InternalMessageInfo

func (m *KVWrite) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KVWrite) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KVWrite) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type TxInput struct {
	ChaincodeId          string    `protobuf:"bytes,1,opt,name=chaincode_id,json=chaincodeId,proto3" json:"chaincode_id,omitempty"`
	ChaincodeVersion     string    `protobuf:"bytes,2,opt,name=chaincode_version,json=chaincodeVersion,proto3" json:"chaincode_version,omitempty"`
	ChaincodeArgs        []string  `protobuf:"bytes,3,rep,name=chaincode_args,json=chaincodeArgs,proto3" json:"chaincode_args,omitempty"`
	Reads                []*KVRead `protobuf:"bytes,4,rep,name=reads,proto3" json:"reads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TxInput) Reset()         { *m = TxInput{} }
func (m *TxInput) String() string { return proto.CompactTextString(m) }
func (*TxInput) ProtoMessage()    {}
func (*TxInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{5}
}

func (m *TxInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInput.Unmarshal(m, b)
}
func (m *TxInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInput.Marshal(b, m, deterministic)
}
func (m *TxInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInput.Merge(m, src)
}
func (m *TxInput) XXX_Size() int {
	return xxx_messageInfo_TxInput.Size(m)
}
func (m *TxInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInput.DiscardUnknown(m)
}

var xxx_messageInfo_TxInput proto.InternalMessageInfo

func (m *TxInput) GetChaincodeId() string {
	if m != nil {
		return m.ChaincodeId
	}
	return ""
}

func (m *TxInput) GetChaincodeVersion() string {
	if m != nil {
		return m.ChaincodeVersion
	}
	return ""
}

func (m *TxInput) GetChaincodeArgs() []string {
	if m != nil {
		return m.ChaincodeArgs
	}
	return nil
}

func (m *TxInput) GetReads() []*KVRead {
	if m != nil {
		return m.Reads
	}
	return nil
}

// VersionMap represents version mapping information between Edgechain and Mainchain
// Recorded  when updating MainchainDB and used for MVCC on ReadSet
type VersionMap struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	EdgechainVersion     *Version `protobuf:"bytes,2,opt,name=EdgechainVersion,proto3" json:"EdgechainVersion,omitempty"`
	MainchainVersion     *Version `protobuf:"bytes,3,opt,name=MainchainVersion,proto3" json:"MainchainVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionMap) Reset()         { *m = VersionMap{} }
func (m *VersionMap) String() string { return proto.CompactTextString(m) }
func (*VersionMap) ProtoMessage()    {}
func (*VersionMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{6}
}

func (m *VersionMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionMap.Unmarshal(m, b)
}
func (m *VersionMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionMap.Marshal(b, m, deterministic)
}
func (m *VersionMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionMap.Merge(m, src)
}
func (m *VersionMap) XXX_Size() int {
	return xxx_messageInfo_VersionMap.Size(m)
}
func (m *VersionMap) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionMap.DiscardUnknown(m)
}

var xxx_messageInfo_VersionMap proto.InternalMessageInfo

func (m *VersionMap) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *VersionMap) GetEdgechainVersion() *Version {
	if m != nil {
		return m.EdgechainVersion
	}
	return nil
}

func (m *VersionMap) GetMainchainVersion() *Version {
	if m != nil {
		return m.MainchainVersion
	}
	return nil
}

type TxOutput struct {
	Writes               []*KVWrite `protobuf:"bytes,1,rep,name=writes,proto3" json:"writes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TxOutput) Reset()         { *m = TxOutput{} }
func (m *TxOutput) String() string { return proto.CompactTextString(m) }
func (*TxOutput) ProtoMessage()    {}
func (*TxOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{7}
}

func (m *TxOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxOutput.Unmarshal(m, b)
}
func (m *TxOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxOutput.Marshal(b, m, deterministic)
}
func (m *TxOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxOutput.Merge(m, src)
}
func (m *TxOutput) XXX_Size() int {
	return xxx_messageInfo_TxOutput.Size(m)
}
func (m *TxOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_TxOutput.DiscardUnknown(m)
}

var xxx_messageInfo_TxOutput proto.InternalMessageInfo

func (m *TxOutput) GetWrites() []*KVWrite {
	if m != nil {
		return m.Writes
	}
	return nil
}

type ChangeTriggerEvent struct {
	Code                 ChangeTriggerCode `protobuf:"varint,1,opt,name=Code,proto3,enum=bsp_transaction.ChangeTriggerCode" json:"Code,omitempty"`
	Payload              []byte            `protobuf:"bytes,2,opt,name=Payload,proto3" json:"Payload,omitempty"`
	CurrViewNumber       uint64            `protobuf:"varint,3,opt,name=CurrViewNumber,proto3" json:"CurrViewNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChangeTriggerEvent) Reset()         { *m = ChangeTriggerEvent{} }
func (m *ChangeTriggerEvent) String() string { return proto.CompactTextString(m) }
func (*ChangeTriggerEvent) ProtoMessage()    {}
func (*ChangeTriggerEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{8}
}

func (m *ChangeTriggerEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeTriggerEvent.Unmarshal(m, b)
}
func (m *ChangeTriggerEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeTriggerEvent.Marshal(b, m, deterministic)
}
func (m *ChangeTriggerEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeTriggerEvent.Merge(m, src)
}
func (m *ChangeTriggerEvent) XXX_Size() int {
	return xxx_messageInfo_ChangeTriggerEvent.Size(m)
}
func (m *ChangeTriggerEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeTriggerEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeTriggerEvent proto.InternalMessageInfo

func (m *ChangeTriggerEvent) GetCode() ChangeTriggerCode {
	if m != nil {
		return m.Code
	}
	return ChangeTriggerCode_INVALID_SIGNATURE
}

func (m *ChangeTriggerEvent) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ChangeTriggerEvent) GetCurrViewNumber() uint64 {
	if m != nil {
		return m.CurrViewNumber
	}
	return 0
}

// BspTransaction is a transaction made by BSP,
// enabling the re-execution-based verification (i.e., checkchain logic validation) by peers
// Note that this is possible by containing TxInput and TxOutput
type BspTransaction struct {
	ClientId             string             `protobuf:"bytes,1,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	TxId                 string             `protobuf:"bytes,2,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Seq                  uint64             `protobuf:"varint,3,opt,name=Seq,proto3" json:"Seq,omitempty"`
	Input                *TxInput           `protobuf:"bytes,4,opt,name=Input,proto3" json:"Input,omitempty"`
	Output               *TxOutput          `protobuf:"bytes,5,opt,name=Output,proto3" json:"Output,omitempty"`
	Signature            []byte             `protobuf:"bytes,6,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Proposal             []byte             `protobuf:"bytes,7,opt,name=Proposal,proto3" json:"Proposal,omitempty"`
	Type                 BspTransactionType `protobuf:"varint,10,opt,name=type,proto3,enum=bsp_transaction.BspTransactionType" json:"type,omitempty"`
	Region               string             `protobuf:"bytes,11,opt,name=Region,proto3" json:"Region,omitempty"`
	ChainID              string             `protobuf:"bytes,12,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	TxMetadata           []byte             `protobuf:"bytes,20,opt,name=TxMetadata,proto3" json:"TxMetadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BspTransaction) Reset()         { *m = BspTransaction{} }
func (m *BspTransaction) String() string { return proto.CompactTextString(m) }
func (*BspTransaction) ProtoMessage()    {}
func (*BspTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{9}
}

func (m *BspTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BspTransaction.Unmarshal(m, b)
}
func (m *BspTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BspTransaction.Marshal(b, m, deterministic)
}
func (m *BspTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BspTransaction.Merge(m, src)
}
func (m *BspTransaction) XXX_Size() int {
	return xxx_messageInfo_BspTransaction.Size(m)
}
func (m *BspTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_BspTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_BspTransaction proto.InternalMessageInfo

func (m *BspTransaction) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *BspTransaction) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *BspTransaction) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *BspTransaction) GetInput() *TxInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *BspTransaction) GetOutput() *TxOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *BspTransaction) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *BspTransaction) GetProposal() []byte {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *BspTransaction) GetType() BspTransactionType {
	if m != nil {
		return m.Type
	}
	return BspTransactionType_IntraTx
}

func (m *BspTransaction) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *BspTransaction) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *BspTransaction) GetTxMetadata() []byte {
	if m != nil {
		return m.TxMetadata
	}
	return nil
}

// TxMetadata useful for catching latency for InterTx
type TxMetadata struct {
	MetricSubmittedTime        float32  `protobuf:"fixed32,1,opt,name=MetricSubmittedTime,proto3" json:"MetricSubmittedTime,omitempty"`
	MetricMainchainArrivalTime float32  `protobuf:"fixed32,2,opt,name=MetricMainchainArrivalTime,proto3" json:"MetricMainchainArrivalTime,omitempty"`
	MetricCommitTime           float32  `protobuf:"fixed32,3,opt,name=MetricCommitTime,proto3" json:"MetricCommitTime,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *TxMetadata) Reset()         { *m = TxMetadata{} }
func (m *TxMetadata) String() string { return proto.CompactTextString(m) }
func (*TxMetadata) ProtoMessage()    {}
func (*TxMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{10}
}

func (m *TxMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxMetadata.Unmarshal(m, b)
}
func (m *TxMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxMetadata.Marshal(b, m, deterministic)
}
func (m *TxMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxMetadata.Merge(m, src)
}
func (m *TxMetadata) XXX_Size() int {
	return xxx_messageInfo_TxMetadata.Size(m)
}
func (m *TxMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_TxMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_TxMetadata proto.InternalMessageInfo

func (m *TxMetadata) GetMetricSubmittedTime() float32 {
	if m != nil {
		return m.MetricSubmittedTime
	}
	return 0
}

func (m *TxMetadata) GetMetricMainchainArrivalTime() float32 {
	if m != nil {
		return m.MetricMainchainArrivalTime
	}
	return 0
}

func (m *TxMetadata) GetMetricCommitTime() float32 {
	if m != nil {
		return m.MetricCommitTime
	}
	return 0
}

type CommitEventRequestByClientID struct {
	Header               string   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	PeerId               string   `protobuf:"bytes,4,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitEventRequestByClientID) Reset()         { *m = CommitEventRequestByClientID{} }
func (m *CommitEventRequestByClientID) String() string { return proto.CompactTextString(m) }
func (*CommitEventRequestByClientID) ProtoMessage()    {}
func (*CommitEventRequestByClientID) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{11}
}

func (m *CommitEventRequestByClientID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitEventRequestByClientID.Unmarshal(m, b)
}
func (m *CommitEventRequestByClientID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitEventRequestByClientID.Marshal(b, m, deterministic)
}
func (m *CommitEventRequestByClientID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitEventRequestByClientID.Merge(m, src)
}
func (m *CommitEventRequestByClientID) XXX_Size() int {
	return xxx_messageInfo_CommitEventRequestByClientID.Size(m)
}
func (m *CommitEventRequestByClientID) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitEventRequestByClientID.DiscardUnknown(m)
}

var xxx_messageInfo_CommitEventRequestByClientID proto.InternalMessageInfo

func (m *CommitEventRequestByClientID) GetHeader() string {
	if m != nil {
		return m.Header
	}
	return ""
}

func (m *CommitEventRequestByClientID) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *CommitEventRequestByClientID) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CommitEventRequestByClientID) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

//
type TxEventPayload struct {
	ClientID             string          `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	TxId                 string          `protobuf:"bytes,2,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Number               uint64          `protobuf:"varint,3,opt,name=Number,proto3" json:"Number,omitempty"`
	Offset               uint64          `protobuf:"varint,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
	State                *ConsensusState `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	ActiveBSPAddress     string          `protobuf:"bytes,6,opt,name=ActiveBSPAddress,proto3" json:"ActiveBSPAddress,omitempty"`
	Extension            []byte          `protobuf:"bytes,10,opt,name=Extension,proto3" json:"Extension,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TxEventPayload) Reset()         { *m = TxEventPayload{} }
func (m *TxEventPayload) String() string { return proto.CompactTextString(m) }
func (*TxEventPayload) ProtoMessage()    {}
func (*TxEventPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{12}
}

func (m *TxEventPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxEventPayload.Unmarshal(m, b)
}
func (m *TxEventPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxEventPayload.Marshal(b, m, deterministic)
}
func (m *TxEventPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxEventPayload.Merge(m, src)
}
func (m *TxEventPayload) XXX_Size() int {
	return xxx_messageInfo_TxEventPayload.Size(m)
}
func (m *TxEventPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_TxEventPayload.DiscardUnknown(m)
}

var xxx_messageInfo_TxEventPayload proto.InternalMessageInfo

func (m *TxEventPayload) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *TxEventPayload) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TxEventPayload) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *TxEventPayload) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TxEventPayload) GetState() *ConsensusState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *TxEventPayload) GetActiveBSPAddress() string {
	if m != nil {
		return m.ActiveBSPAddress
	}
	return ""
}

func (m *TxEventPayload) GetExtension() []byte {
	if m != nil {
		return m.Extension
	}
	return nil
}

// Use this !
type TxEvent struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	SignatureHeader      []byte   `protobuf:"bytes,3,opt,name=SignatureHeader,proto3" json:"SignatureHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxEvent) Reset()         { *m = TxEvent{} }
func (m *TxEvent) String() string { return proto.CompactTextString(m) }
func (*TxEvent) ProtoMessage()    {}
func (*TxEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{13}
}

func (m *TxEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxEvent.Unmarshal(m, b)
}
func (m *TxEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxEvent.Marshal(b, m, deterministic)
}
func (m *TxEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxEvent.Merge(m, src)
}
func (m *TxEvent) XXX_Size() int {
	return xxx_messageInfo_TxEvent.Size(m)
}
func (m *TxEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TxEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TxEvent proto.InternalMessageInfo

func (m *TxEvent) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *TxEvent) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *TxEvent) GetSignatureHeader() []byte {
	if m != nil {
		return m.SignatureHeader
	}
	return nil
}

type TransactionCommitEvent struct {
	ClientId         string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	IndexInBlock     int32  `protobuf:"varint,2,opt,name=index_in_block,json=indexInBlock,proto3" json:"index_in_block,omitempty"`
	Txid             string `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	ValidationCode   int32  `protobuf:"varint,4,opt,name=validation_code,json=validationCode,proto3" json:"validation_code,omitempty"`
	ChaincodeId      string `protobuf:"bytes,5,opt,name=chaincode_id,json=chaincodeId,proto3" json:"chaincode_id,omitempty"`
	ChaincodeVersion string `protobuf:"bytes,6,opt,name=chaincode_version,json=chaincodeVersion,proto3" json:"chaincode_version,omitempty"`
	PeerId           string `protobuf:"bytes,7,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// number is a block number that this transaction is committed
	Number               uint64   `protobuf:"varint,8,opt,name=number,proto3" json:"number,omitempty"`
	Signature            []byte   `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionCommitEvent) Reset()         { *m = TransactionCommitEvent{} }
func (m *TransactionCommitEvent) String() string { return proto.CompactTextString(m) }
func (*TransactionCommitEvent) ProtoMessage()    {}
func (*TransactionCommitEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{14}
}

func (m *TransactionCommitEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionCommitEvent.Unmarshal(m, b)
}
func (m *TransactionCommitEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionCommitEvent.Marshal(b, m, deterministic)
}
func (m *TransactionCommitEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionCommitEvent.Merge(m, src)
}
func (m *TransactionCommitEvent) XXX_Size() int {
	return xxx_messageInfo_TransactionCommitEvent.Size(m)
}
func (m *TransactionCommitEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionCommitEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionCommitEvent proto.InternalMessageInfo

func (m *TransactionCommitEvent) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *TransactionCommitEvent) GetIndexInBlock() int32 {
	if m != nil {
		return m.IndexInBlock
	}
	return 0
}

func (m *TransactionCommitEvent) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *TransactionCommitEvent) GetValidationCode() int32 {
	if m != nil {
		return m.ValidationCode
	}
	return 0
}

func (m *TransactionCommitEvent) GetChaincodeId() string {
	if m != nil {
		return m.ChaincodeId
	}
	return ""
}

func (m *TransactionCommitEvent) GetChaincodeVersion() string {
	if m != nil {
		return m.ChaincodeVersion
	}
	return ""
}

func (m *TransactionCommitEvent) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *TransactionCommitEvent) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *TransactionCommitEvent) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BFTEvent struct {
	// below 4 fields used when block-based event notification
	PrepareHeight        uint64   `protobuf:"varint,2,opt,name=prepare_height,json=prepareHeight,proto3" json:"prepare_height,omitempty"`
	CommitHeight         uint64   `protobuf:"varint,3,opt,name=commit_height,json=commitHeight,proto3" json:"commit_height,omitempty"`
	LatestHeight         uint64   `protobuf:"varint,4,opt,name=latest_height,json=latestHeight,proto3" json:"latest_height,omitempty"`
	PeerId               string   `protobuf:"bytes,5,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Signature            []byte   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BFTEvent) Reset()         { *m = BFTEvent{} }
func (m *BFTEvent) String() string { return proto.CompactTextString(m) }
func (*BFTEvent) ProtoMessage()    {}
func (*BFTEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{15}
}

func (m *BFTEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BFTEvent.Unmarshal(m, b)
}
func (m *BFTEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BFTEvent.Marshal(b, m, deterministic)
}
func (m *BFTEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BFTEvent.Merge(m, src)
}
func (m *BFTEvent) XXX_Size() int {
	return xxx_messageInfo_BFTEvent.Size(m)
}
func (m *BFTEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_BFTEvent.DiscardUnknown(m)
}

var xxx_messageInfo_BFTEvent proto.InternalMessageInfo

func (m *BFTEvent) GetPrepareHeight() uint64 {
	if m != nil {
		return m.PrepareHeight
	}
	return 0
}

func (m *BFTEvent) GetCommitHeight() uint64 {
	if m != nil {
		return m.CommitHeight
	}
	return 0
}

func (m *BFTEvent) GetLatestHeight() uint64 {
	if m != nil {
		return m.LatestHeight
	}
	return 0
}

func (m *BFTEvent) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *BFTEvent) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BFTEventByTx struct {
	// below 2 fields used for tx-based event notification
	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	PeerId               string   `protobuf:"bytes,3,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Signature            []byte   `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BFTEventByTx) Reset()         { *m = BFTEventByTx{} }
func (m *BFTEventByTx) String() string { return proto.CompactTextString(m) }
func (*BFTEventByTx) ProtoMessage()    {}
func (*BFTEventByTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{16}
}

func (m *BFTEventByTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BFTEventByTx.Unmarshal(m, b)
}
func (m *BFTEventByTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BFTEventByTx.Marshal(b, m, deterministic)
}
func (m *BFTEventByTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BFTEventByTx.Merge(m, src)
}
func (m *BFTEventByTx) XXX_Size() int {
	return xxx_messageInfo_BFTEventByTx.Size(m)
}
func (m *BFTEventByTx) XXX_DiscardUnknown() {
	xxx_messageInfo_BFTEventByTx.DiscardUnknown(m)
}

var xxx_messageInfo_BFTEventByTx proto.InternalMessageInfo

func (m *BFTEventByTx) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *BFTEventByTx) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *BFTEventByTx) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *BFTEventByTx) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type TSAEvent struct {
	// An identity of TSA, i.e., one of the auditor's identity for now
	TsaIdentity string `protobuf:"bytes,1,opt,name=tsa_identity,json=tsaIdentity,proto3" json:"tsa_identity,omitempty"`
	// A block height that the TSA has endorsed
	Height               uint64   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TSAEvent) Reset()         { *m = TSAEvent{} }
func (m *TSAEvent) String() string { return proto.CompactTextString(m) }
func (*TSAEvent) ProtoMessage()    {}
func (*TSAEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{17}
}

func (m *TSAEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TSAEvent.Unmarshal(m, b)
}
func (m *TSAEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TSAEvent.Marshal(b, m, deterministic)
}
func (m *TSAEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TSAEvent.Merge(m, src)
}
func (m *TSAEvent) XXX_Size() int {
	return xxx_messageInfo_TSAEvent.Size(m)
}
func (m *TSAEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TSAEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TSAEvent proto.InternalMessageInfo

func (m *TSAEvent) GetTsaIdentity() string {
	if m != nil {
		return m.TsaIdentity
	}
	return ""
}

func (m *TSAEvent) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TSAEvent) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type CommitEventResponse struct {
	ReplyType            CommitEventReplyType `protobuf:"varint,1,opt,name=reply_type,json=replyType,proto3,enum=bsp_transaction.CommitEventReplyType" json:"reply_type,omitempty"`
	Payload              []byte               `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature            []byte               `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CommitEventResponse) Reset()         { *m = CommitEventResponse{} }
func (m *CommitEventResponse) String() string { return proto.CompactTextString(m) }
func (*CommitEventResponse) ProtoMessage()    {}
func (*CommitEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{18}
}

func (m *CommitEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitEventResponse.Unmarshal(m, b)
}
func (m *CommitEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitEventResponse.Marshal(b, m, deterministic)
}
func (m *CommitEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitEventResponse.Merge(m, src)
}
func (m *CommitEventResponse) XXX_Size() int {
	return xxx_messageInfo_CommitEventResponse.Size(m)
}
func (m *CommitEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitEventResponse proto.InternalMessageInfo

func (m *CommitEventResponse) GetReplyType() CommitEventReplyType {
	if m != nil {
		return m.ReplyType
	}
	return CommitEventReplyType_Speculative
}

func (m *CommitEventResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CommitEventResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// TxRequest by client to BSP
type Proposal struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	SignatureHeader      []byte   `protobuf:"bytes,3,opt,name=SignatureHeader,proto3" json:"SignatureHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proposal) Reset()         { *m = Proposal{} }
func (m *Proposal) String() string { return proto.CompactTextString(m) }
func (*Proposal) ProtoMessage()    {}
func (*Proposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{19}
}

func (m *Proposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proposal.Unmarshal(m, b)
}
func (m *Proposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proposal.Marshal(b, m, deterministic)
}
func (m *Proposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proposal.Merge(m, src)
}
func (m *Proposal) XXX_Size() int {
	return xxx_messageInfo_Proposal.Size(m)
}
func (m *Proposal) XXX_DiscardUnknown() {
	xxx_messageInfo_Proposal.DiscardUnknown(m)
}

var xxx_messageInfo_Proposal proto.InternalMessageInfo

func (m *Proposal) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Proposal) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Proposal) GetSignatureHeader() []byte {
	if m != nil {
		return m.SignatureHeader
	}
	return nil
}

type ProposalBatch struct {
	Batches              []*Proposal `protobuf:"bytes,1,rep,name=Batches,proto3" json:"Batches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ProposalBatch) Reset()         { *m = ProposalBatch{} }
func (m *ProposalBatch) String() string { return proto.CompactTextString(m) }
func (*ProposalBatch) ProtoMessage()    {}
func (*ProposalBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{20}
}

func (m *ProposalBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalBatch.Unmarshal(m, b)
}
func (m *ProposalBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalBatch.Marshal(b, m, deterministic)
}
func (m *ProposalBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalBatch.Merge(m, src)
}
func (m *ProposalBatch) XXX_Size() int {
	return xxx_messageInfo_ProposalBatch.Size(m)
}
func (m *ProposalBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalBatch.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalBatch proto.InternalMessageInfo

func (m *ProposalBatch) GetBatches() []*Proposal {
	if m != nil {
		return m.Batches
	}
	return nil
}

type ProposalResponseBatch struct {
	Batches              []*ProposalResponse `protobuf:"bytes,1,rep,name=Batches,proto3" json:"Batches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProposalResponseBatch) Reset()         { *m = ProposalResponseBatch{} }
func (m *ProposalResponseBatch) String() string { return proto.CompactTextString(m) }
func (*ProposalResponseBatch) ProtoMessage()    {}
func (*ProposalResponseBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{21}
}

func (m *ProposalResponseBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalResponseBatch.Unmarshal(m, b)
}
func (m *ProposalResponseBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalResponseBatch.Marshal(b, m, deterministic)
}
func (m *ProposalResponseBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalResponseBatch.Merge(m, src)
}
func (m *ProposalResponseBatch) XXX_Size() int {
	return xxx_messageInfo_ProposalResponseBatch.Size(m)
}
func (m *ProposalResponseBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalResponseBatch.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalResponseBatch proto.InternalMessageInfo

func (m *ProposalResponseBatch) GetBatches() []*ProposalResponse {
	if m != nil {
		return m.Batches
	}
	return nil
}

type ProposalPayload struct {
	ClientId      string   `protobuf:"bytes,1,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	TxId          string   `protobuf:"bytes,2,opt,name=TxId,proto3" json:"TxId,omitempty"`
	ChaincodeId   string   `protobuf:"bytes,3,opt,name=ChaincodeId,proto3" json:"ChaincodeId,omitempty"`
	ChaincodeArgs []string `protobuf:"bytes,4,rep,name=ChaincodeArgs,proto3" json:"ChaincodeArgs,omitempty"`
	// extensionPayload reserved for MC-Audit Tx or Client-Policy
	ExtensionPaylod      []byte   `protobuf:"bytes,5,opt,name=ExtensionPaylod,proto3" json:"ExtensionPaylod,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposalPayload) Reset()         { *m = ProposalPayload{} }
func (m *ProposalPayload) String() string { return proto.CompactTextString(m) }
func (*ProposalPayload) ProtoMessage()    {}
func (*ProposalPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{22}
}

func (m *ProposalPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalPayload.Unmarshal(m, b)
}
func (m *ProposalPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalPayload.Marshal(b, m, deterministic)
}
func (m *ProposalPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalPayload.Merge(m, src)
}
func (m *ProposalPayload) XXX_Size() int {
	return xxx_messageInfo_ProposalPayload.Size(m)
}
func (m *ProposalPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalPayload proto.InternalMessageInfo

func (m *ProposalPayload) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ProposalPayload) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *ProposalPayload) GetChaincodeId() string {
	if m != nil {
		return m.ChaincodeId
	}
	return ""
}

func (m *ProposalPayload) GetChaincodeArgs() []string {
	if m != nil {
		return m.ChaincodeArgs
	}
	return nil
}

func (m *ProposalPayload) GetExtensionPaylod() []byte {
	if m != nil {
		return m.ExtensionPaylod
	}
	return nil
}

type SignatureHeader struct {
	Creator              []byte   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Nonce                []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignatureHeader) Reset()         { *m = SignatureHeader{} }
func (m *SignatureHeader) String() string { return proto.CompactTextString(m) }
func (*SignatureHeader) ProtoMessage()    {}
func (*SignatureHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{23}
}

func (m *SignatureHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureHeader.Unmarshal(m, b)
}
func (m *SignatureHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureHeader.Marshal(b, m, deterministic)
}
func (m *SignatureHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureHeader.Merge(m, src)
}
func (m *SignatureHeader) XXX_Size() int {
	return xxx_messageInfo_SignatureHeader.Size(m)
}
func (m *SignatureHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureHeader.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureHeader proto.InternalMessageInfo

func (m *SignatureHeader) GetCreator() []byte {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *SignatureHeader) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

// TxResponse by BSP to client
type ProposalResponse struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	SignatureHeader      []byte   `protobuf:"bytes,3,opt,name=signature_header,json=signatureHeader,proto3" json:"signature_header,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposalResponse) Reset()         { *m = ProposalResponse{} }
func (m *ProposalResponse) String() string { return proto.CompactTextString(m) }
func (*ProposalResponse) ProtoMessage()    {}
func (*ProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{24}
}

func (m *ProposalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalResponse.Unmarshal(m, b)
}
func (m *ProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalResponse.Marshal(b, m, deterministic)
}
func (m *ProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalResponse.Merge(m, src)
}
func (m *ProposalResponse) XXX_Size() int {
	return xxx_messageInfo_ProposalResponse.Size(m)
}
func (m *ProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalResponse proto.InternalMessageInfo

func (m *ProposalResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ProposalResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ProposalResponse) GetSignatureHeader() []byte {
	if m != nil {
		return m.SignatureHeader
	}
	return nil
}

func (m *ProposalResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type InitializeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitializeRequest) Reset()         { *m = InitializeRequest{} }
func (m *InitializeRequest) String() string { return proto.CompactTextString(m) }
func (*InitializeRequest) ProtoMessage()    {}
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{25}
}

func (m *InitializeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializeRequest.Unmarshal(m, b)
}
func (m *InitializeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializeRequest.Marshal(b, m, deterministic)
}
func (m *InitializeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeRequest.Merge(m, src)
}
func (m *InitializeRequest) XXX_Size() int {
	return xxx_messageInfo_InitializeRequest.Size(m)
}
func (m *InitializeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeRequest proto.InternalMessageInfo

type HelloRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{26}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type HelloResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{27}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type AuditTransaction struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	SignatureHeader      []byte   `protobuf:"bytes,3,opt,name=signature_header,json=signatureHeader,proto3" json:"signature_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuditTransaction) Reset()         { *m = AuditTransaction{} }
func (m *AuditTransaction) String() string { return proto.CompactTextString(m) }
func (*AuditTransaction) ProtoMessage()    {}
func (*AuditTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{28}
}

func (m *AuditTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditTransaction.Unmarshal(m, b)
}
func (m *AuditTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditTransaction.Marshal(b, m, deterministic)
}
func (m *AuditTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditTransaction.Merge(m, src)
}
func (m *AuditTransaction) XXX_Size() int {
	return xxx_messageInfo_AuditTransaction.Size(m)
}
func (m *AuditTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_AuditTransaction proto.InternalMessageInfo

func (m *AuditTransaction) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *AuditTransaction) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *AuditTransaction) GetSignatureHeader() []byte {
	if m != nil {
		return m.SignatureHeader
	}
	return nil
}

type AuditTransactionPayload struct {
	Type      AuditType `protobuf:"varint,1,opt,name=type,proto3,enum=bsp_transaction.AuditType" json:"type,omitempty"`
	ChainID   string    `protobuf:"bytes,2,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	RegionID  string    `protobuf:"bytes,3,opt,name=RegionID,proto3" json:"RegionID,omitempty"`
	ActiveID  string    `protobuf:"bytes,4,opt,name=ActiveID,proto3" json:"ActiveID,omitempty"`
	StanbyIDs []string  `protobuf:"bytes,5,rep,name=StanbyIDs,proto3" json:"StanbyIDs,omitempty"`
	TxId      string    `protobuf:"bytes,6,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Number    uint64    `protobuf:"varint,10,opt,name=Number,proto3" json:"Number,omitempty"`
	Hash      []byte    `protobuf:"bytes,11,opt,name=Hash,proto3" json:"Hash,omitempty"`
	PrevHash  []byte    `protobuf:"bytes,12,opt,name=PrevHash,proto3" json:"PrevHash,omitempty"`
	Member    string    `protobuf:"bytes,13,opt,name=Member,proto3" json:"Member,omitempty"`
	// MerkleRootHash
	MerkleRootHash       []byte   `protobuf:"bytes,14,opt,name=MerkleRootHash,proto3" json:"MerkleRootHash,omitempty"`
	CreatorSignature     []byte   `protobuf:"bytes,15,opt,name=CreatorSignature,proto3" json:"CreatorSignature,omitempty"`
	Extension            []byte   `protobuf:"bytes,20,opt,name=extension,proto3" json:"extension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuditTransactionPayload) Reset()         { *m = AuditTransactionPayload{} }
func (m *AuditTransactionPayload) String() string { return proto.CompactTextString(m) }
func (*AuditTransactionPayload) ProtoMessage()    {}
func (*AuditTransactionPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{29}
}

func (m *AuditTransactionPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditTransactionPayload.Unmarshal(m, b)
}
func (m *AuditTransactionPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditTransactionPayload.Marshal(b, m, deterministic)
}
func (m *AuditTransactionPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditTransactionPayload.Merge(m, src)
}
func (m *AuditTransactionPayload) XXX_Size() int {
	return xxx_messageInfo_AuditTransactionPayload.Size(m)
}
func (m *AuditTransactionPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditTransactionPayload.DiscardUnknown(m)
}

var xxx_messageInfo_AuditTransactionPayload proto.InternalMessageInfo

func (m *AuditTransactionPayload) GetType() AuditType {
	if m != nil {
		return m.Type
	}
	return AuditType_EC
}

func (m *AuditTransactionPayload) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *AuditTransactionPayload) GetRegionID() string {
	if m != nil {
		return m.RegionID
	}
	return ""
}

func (m *AuditTransactionPayload) GetActiveID() string {
	if m != nil {
		return m.ActiveID
	}
	return ""
}

func (m *AuditTransactionPayload) GetStanbyIDs() []string {
	if m != nil {
		return m.StanbyIDs
	}
	return nil
}

func (m *AuditTransactionPayload) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *AuditTransactionPayload) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *AuditTransactionPayload) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *AuditTransactionPayload) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *AuditTransactionPayload) GetMember() string {
	if m != nil {
		return m.Member
	}
	return ""
}

func (m *AuditTransactionPayload) GetMerkleRootHash() []byte {
	if m != nil {
		return m.MerkleRootHash
	}
	return nil
}

func (m *AuditTransactionPayload) GetCreatorSignature() []byte {
	if m != nil {
		return m.CreatorSignature
	}
	return nil
}

func (m *AuditTransactionPayload) GetExtension() []byte {
	if m != nil {
		return m.Extension
	}
	return nil
}

// AuditTransactionExtension is mainchain (MC-AuditTx)
type AuditTransactionExtension struct {
	// repeated ECProof ecproofs  = 2;
	InterTxResults       []*InterTxResult  `protobuf:"bytes,3,rep,name=interTxResults,proto3" json:"interTxResults,omitempty"`
	MCparameters         *MCBuildParameter `protobuf:"bytes,4,opt,name=MCparameters,proto3" json:"MCparameters,omitempty"`
	MainchainHeader      *MCHeader         `protobuf:"bytes,5,opt,name=MainchainHeader,proto3" json:"MainchainHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AuditTransactionExtension) Reset()         { *m = AuditTransactionExtension{} }
func (m *AuditTransactionExtension) String() string { return proto.CompactTextString(m) }
func (*AuditTransactionExtension) ProtoMessage()    {}
func (*AuditTransactionExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{30}
}

func (m *AuditTransactionExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditTransactionExtension.Unmarshal(m, b)
}
func (m *AuditTransactionExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditTransactionExtension.Marshal(b, m, deterministic)
}
func (m *AuditTransactionExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditTransactionExtension.Merge(m, src)
}
func (m *AuditTransactionExtension) XXX_Size() int {
	return xxx_messageInfo_AuditTransactionExtension.Size(m)
}
func (m *AuditTransactionExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditTransactionExtension.DiscardUnknown(m)
}

var xxx_messageInfo_AuditTransactionExtension proto.InternalMessageInfo

func (m *AuditTransactionExtension) GetInterTxResults() []*InterTxResult {
	if m != nil {
		return m.InterTxResults
	}
	return nil
}

func (m *AuditTransactionExtension) GetMCparameters() *MCBuildParameter {
	if m != nil {
		return m.MCparameters
	}
	return nil
}

func (m *AuditTransactionExtension) GetMainchainHeader() *MCHeader {
	if m != nil {
		return m.MainchainHeader
	}
	return nil
}

type MCBuildParameter struct {
	OrderingMethod       OrderingMethod `protobuf:"varint,1,opt,name=OrderingMethod,proto3,enum=bsp_transaction.OrderingMethod" json:"OrderingMethod,omitempty"`
	BuildParameter       []byte         `protobuf:"bytes,2,opt,name=BuildParameter,proto3" json:"BuildParameter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MCBuildParameter) Reset()         { *m = MCBuildParameter{} }
func (m *MCBuildParameter) String() string { return proto.CompactTextString(m) }
func (*MCBuildParameter) ProtoMessage()    {}
func (*MCBuildParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{31}
}

func (m *MCBuildParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MCBuildParameter.Unmarshal(m, b)
}
func (m *MCBuildParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MCBuildParameter.Marshal(b, m, deterministic)
}
func (m *MCBuildParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MCBuildParameter.Merge(m, src)
}
func (m *MCBuildParameter) XXX_Size() int {
	return xxx_messageInfo_MCBuildParameter.Size(m)
}
func (m *MCBuildParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_MCBuildParameter.DiscardUnknown(m)
}

var xxx_messageInfo_MCBuildParameter proto.InternalMessageInfo

func (m *MCBuildParameter) GetOrderingMethod() OrderingMethod {
	if m != nil {
		return m.OrderingMethod
	}
	return OrderingMethod_IndexBasedOrdering
}

func (m *MCBuildParameter) GetBuildParameter() []byte {
	if m != nil {
		return m.BuildParameter
	}
	return nil
}

// assumes that all edge chains are euqally generating their blocks
type BuildParameterOfIndexBasedOrdering struct {
	BucketSize uint64 `protobuf:"varint,1,opt,name=BucketSize,proto3" json:"BucketSize,omitempty"`
	// uint64 StartBlockNumber = 2;
	MCTimeout            string   `protobuf:"bytes,3,opt,name=MCTimeout,proto3" json:"MCTimeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildParameterOfIndexBasedOrdering) Reset()         { *m = BuildParameterOfIndexBasedOrdering{} }
func (m *BuildParameterOfIndexBasedOrdering) String() string { return proto.CompactTextString(m) }
func (*BuildParameterOfIndexBasedOrdering) ProtoMessage()    {}
func (*BuildParameterOfIndexBasedOrdering) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{32}
}

func (m *BuildParameterOfIndexBasedOrdering) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildParameterOfIndexBasedOrdering.Unmarshal(m, b)
}
func (m *BuildParameterOfIndexBasedOrdering) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildParameterOfIndexBasedOrdering.Marshal(b, m, deterministic)
}
func (m *BuildParameterOfIndexBasedOrdering) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildParameterOfIndexBasedOrdering.Merge(m, src)
}
func (m *BuildParameterOfIndexBasedOrdering) XXX_Size() int {
	return xxx_messageInfo_BuildParameterOfIndexBasedOrdering.Size(m)
}
func (m *BuildParameterOfIndexBasedOrdering) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildParameterOfIndexBasedOrdering.DiscardUnknown(m)
}

var xxx_messageInfo_BuildParameterOfIndexBasedOrdering proto.InternalMessageInfo

func (m *BuildParameterOfIndexBasedOrdering) GetBucketSize() uint64 {
	if m != nil {
		return m.BucketSize
	}
	return 0
}

func (m *BuildParameterOfIndexBasedOrdering) GetMCTimeout() string {
	if m != nil {
		return m.MCTimeout
	}
	return ""
}

type BuildParameterOfDependencyGraphBasedReOrdering struct {
	ReOrderingMethod     string   `protobuf:"bytes,1,opt,name=ReOrderingMethod,proto3" json:"ReOrderingMethod,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildParameterOfDependencyGraphBasedReOrdering) Reset() {
	*m = BuildParameterOfDependencyGraphBasedReOrdering{}
}
func (m *BuildParameterOfDependencyGraphBasedReOrdering) String() string {
	return proto.CompactTextString(m)
}
func (*BuildParameterOfDependencyGraphBasedReOrdering) ProtoMessage() {}
func (*BuildParameterOfDependencyGraphBasedReOrdering) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{33}
}

func (m *BuildParameterOfDependencyGraphBasedReOrdering) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildParameterOfDependencyGraphBasedReOrdering.Unmarshal(m, b)
}
func (m *BuildParameterOfDependencyGraphBasedReOrdering) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildParameterOfDependencyGraphBasedReOrdering.Marshal(b, m, deterministic)
}
func (m *BuildParameterOfDependencyGraphBasedReOrdering) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildParameterOfDependencyGraphBasedReOrdering.Merge(m, src)
}
func (m *BuildParameterOfDependencyGraphBasedReOrdering) XXX_Size() int {
	return xxx_messageInfo_BuildParameterOfDependencyGraphBasedReOrdering.Size(m)
}
func (m *BuildParameterOfDependencyGraphBasedReOrdering) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildParameterOfDependencyGraphBasedReOrdering.DiscardUnknown(m)
}

var xxx_messageInfo_BuildParameterOfDependencyGraphBasedReOrdering proto.InternalMessageInfo

func (m *BuildParameterOfDependencyGraphBasedReOrdering) GetReOrderingMethod() string {
	if m != nil {
		return m.ReOrderingMethod
	}
	return ""
}

type ConsensusState struct {
	Level                ConsensusState_Level  `protobuf:"varint,1,opt,name=level,proto3,enum=bsp_transaction.ConsensusState_Level" json:"level,omitempty"`
	Result               ConsensusState_Result `protobuf:"varint,2,opt,name=result,proto3,enum=bsp_transaction.ConsensusState_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ConsensusState) Reset()         { *m = ConsensusState{} }
func (m *ConsensusState) String() string { return proto.CompactTextString(m) }
func (*ConsensusState) ProtoMessage()    {}
func (*ConsensusState) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{34}
}

func (m *ConsensusState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsensusState.Unmarshal(m, b)
}
func (m *ConsensusState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsensusState.Marshal(b, m, deterministic)
}
func (m *ConsensusState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusState.Merge(m, src)
}
func (m *ConsensusState) XXX_Size() int {
	return xxx_messageInfo_ConsensusState.Size(m)
}
func (m *ConsensusState) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusState.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusState proto.InternalMessageInfo

func (m *ConsensusState) GetLevel() ConsensusState_Level {
	if m != nil {
		return m.Level
	}
	return ConsensusState_EC_Spec
}

func (m *ConsensusState) GetResult() ConsensusState_Result {
	if m != nil {
		return m.Result
	}
	return ConsensusState_Commit
}

type InterTxResult struct {
	State                *ConsensusState `protobuf:"bytes,1,opt,name=State,proto3" json:"State,omitempty"`
	TxID                 string          `protobuf:"bytes,2,opt,name=TxID,proto3" json:"TxID,omitempty"`
	Reads                []*KVRead       `protobuf:"bytes,3,rep,name=reads,proto3" json:"reads,omitempty"`
	Writes               []*KVWrite      `protobuf:"bytes,4,rep,name=writes,proto3" json:"writes,omitempty"`
	ChainID              string          `protobuf:"bytes,5,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	RegionID             string          `protobuf:"bytes,6,opt,name=RegionID,proto3" json:"RegionID,omitempty"`
	ActiveID             string          `protobuf:"bytes,7,opt,name=ActiveID,proto3" json:"ActiveID,omitempty"`
	MCVersion            *Version        `protobuf:"bytes,8,opt,name=MCVersion,proto3" json:"MCVersion,omitempty"`
	Metadata             []byte          `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	ECHeight             *Version        `protobuf:"bytes,10,opt,name=ECHeight,proto3" json:"ECHeight,omitempty"`
	ClientID             string          `protobuf:"bytes,11,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InterTxResult) Reset()         { *m = InterTxResult{} }
func (m *InterTxResult) String() string { return proto.CompactTextString(m) }
func (*InterTxResult) ProtoMessage()    {}
func (*InterTxResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{35}
}

func (m *InterTxResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterTxResult.Unmarshal(m, b)
}
func (m *InterTxResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterTxResult.Marshal(b, m, deterministic)
}
func (m *InterTxResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterTxResult.Merge(m, src)
}
func (m *InterTxResult) XXX_Size() int {
	return xxx_messageInfo_InterTxResult.Size(m)
}
func (m *InterTxResult) XXX_DiscardUnknown() {
	xxx_messageInfo_InterTxResult.DiscardUnknown(m)
}

var xxx_messageInfo_InterTxResult proto.InternalMessageInfo

func (m *InterTxResult) GetState() *ConsensusState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *InterTxResult) GetTxID() string {
	if m != nil {
		return m.TxID
	}
	return ""
}

func (m *InterTxResult) GetReads() []*KVRead {
	if m != nil {
		return m.Reads
	}
	return nil
}

func (m *InterTxResult) GetWrites() []*KVWrite {
	if m != nil {
		return m.Writes
	}
	return nil
}

func (m *InterTxResult) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *InterTxResult) GetRegionID() string {
	if m != nil {
		return m.RegionID
	}
	return ""
}

func (m *InterTxResult) GetActiveID() string {
	if m != nil {
		return m.ActiveID
	}
	return ""
}

func (m *InterTxResult) GetMCVersion() *Version {
	if m != nil {
		return m.MCVersion
	}
	return nil
}

func (m *InterTxResult) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *InterTxResult) GetECHeight() *Version {
	if m != nil {
		return m.ECHeight
	}
	return nil
}

func (m *InterTxResult) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

type MCHeader struct {
	// Mainchain Build Round
	Round uint64 `protobuf:"varint,1,opt,name=Round,proto3" json:"Round,omitempty"`
	// Mainchain Block Number
	Number uint64 `protobuf:"varint,2,opt,name=Number,proto3" json:"Number,omitempty"`
	// Mainchain Block Header hash
	Hash []byte `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	// Mainchain Previous Header hash
	PrevHash []byte `protobuf:"bytes,4,opt,name=PrevHash,proto3" json:"PrevHash,omitempty"`
	// Merkle root hash over all EC-Headers
	MerkleRootHash []byte `protobuf:"bytes,5,opt,name=MerkleRootHash,proto3" json:"MerkleRootHash,omitempty"`
	// Mainchain block build configurations
	MCBuildParameter []byte `protobuf:"bytes,6,opt,name=MCBuildParameter,proto3" json:"MCBuildParameter,omitempty"`
	// Set of ECHeaders (ordered by BSP name, block#)
	ECHeaders []*ECHeader `protobuf:"bytes,7,rep,name=ECHeaders,proto3" json:"ECHeaders,omitempty"`
	// Set of Non-EC Commit Blocks (for detecting Block-witholding attack),
	// Blocks corresponding to NonCommitBlocks not appear in MC-Block body
	NonCommitBlockHeaders []*ECHeader `protobuf:"bytes,8,rep,name=NonCommitBlockHeaders,proto3" json:"NonCommitBlockHeaders,omitempty"`
	ActiveGroup           []string    `protobuf:"bytes,9,rep,name=ActiveGroup,proto3" json:"ActiveGroup,omitempty"`
	StandbyGroup          []string    `protobuf:"bytes,10,rep,name=StandbyGroup,proto3" json:"StandbyGroup,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}    `json:"-"`
	XXX_unrecognized      []byte      `json:"-"`
	XXX_sizecache         int32       `json:"-"`
}

func (m *MCHeader) Reset()         { *m = MCHeader{} }
func (m *MCHeader) String() string { return proto.CompactTextString(m) }
func (*MCHeader) ProtoMessage()    {}
func (*MCHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{36}
}

func (m *MCHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MCHeader.Unmarshal(m, b)
}
func (m *MCHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MCHeader.Marshal(b, m, deterministic)
}
func (m *MCHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MCHeader.Merge(m, src)
}
func (m *MCHeader) XXX_Size() int {
	return xxx_messageInfo_MCHeader.Size(m)
}
func (m *MCHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MCHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MCHeader proto.InternalMessageInfo

func (m *MCHeader) GetRound() uint64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *MCHeader) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *MCHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *MCHeader) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *MCHeader) GetMerkleRootHash() []byte {
	if m != nil {
		return m.MerkleRootHash
	}
	return nil
}

func (m *MCHeader) GetMCBuildParameter() []byte {
	if m != nil {
		return m.MCBuildParameter
	}
	return nil
}

func (m *MCHeader) GetECHeaders() []*ECHeader {
	if m != nil {
		return m.ECHeaders
	}
	return nil
}

func (m *MCHeader) GetNonCommitBlockHeaders() []*ECHeader {
	if m != nil {
		return m.NonCommitBlockHeaders
	}
	return nil
}

func (m *MCHeader) GetActiveGroup() []string {
	if m != nil {
		return m.ActiveGroup
	}
	return nil
}

func (m *MCHeader) GetStandbyGroup() []string {
	if m != nil {
		return m.StandbyGroup
	}
	return nil
}

type MCBlock struct {
	Header               *MCHeader  `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Blocks               []*ECBlock `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MCBlock) Reset()         { *m = MCBlock{} }
func (m *MCBlock) String() string { return proto.CompactTextString(m) }
func (*MCBlock) ProtoMessage()    {}
func (*MCBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{37}
}

func (m *MCBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MCBlock.Unmarshal(m, b)
}
func (m *MCBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MCBlock.Marshal(b, m, deterministic)
}
func (m *MCBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MCBlock.Merge(m, src)
}
func (m *MCBlock) XXX_Size() int {
	return xxx_messageInfo_MCBlock.Size(m)
}
func (m *MCBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_MCBlock.DiscardUnknown(m)
}

var xxx_messageInfo_MCBlock proto.InternalMessageInfo

func (m *MCBlock) GetHeader() *MCHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MCBlock) GetBlocks() []*ECBlock {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type ECHeader struct {
	// Marshaled HLF common.Header
	Header               []byte   `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=Region,proto3" json:"Region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECHeader) Reset()         { *m = ECHeader{} }
func (m *ECHeader) String() string { return proto.CompactTextString(m) }
func (*ECHeader) ProtoMessage()    {}
func (*ECHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{38}
}

func (m *ECHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECHeader.Unmarshal(m, b)
}
func (m *ECHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECHeader.Marshal(b, m, deterministic)
}
func (m *ECHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECHeader.Merge(m, src)
}
func (m *ECHeader) XXX_Size() int {
	return xxx_messageInfo_ECHeader.Size(m)
}
func (m *ECHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ECHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ECHeader proto.InternalMessageInfo

func (m *ECHeader) GetHeader() []byte {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ECHeader) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type ECBlock struct {
	// Marshaled HLF common.Block
	Block []byte `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	//  Name of the region that this block belongs to. (e.g., edgechain1)
	Region               string   `protobuf:"bytes,2,opt,name=Region,proto3" json:"Region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECBlock) Reset()         { *m = ECBlock{} }
func (m *ECBlock) String() string { return proto.CompactTextString(m) }
func (*ECBlock) ProtoMessage()    {}
func (*ECBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{39}
}

func (m *ECBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECBlock.Unmarshal(m, b)
}
func (m *ECBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECBlock.Marshal(b, m, deterministic)
}
func (m *ECBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECBlock.Merge(m, src)
}
func (m *ECBlock) XXX_Size() int {
	return xxx_messageInfo_ECBlock.Size(m)
}
func (m *ECBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ECBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ECBlock proto.InternalMessageInfo

func (m *ECBlock) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *ECBlock) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type MCResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MCResponse) Reset()         { *m = MCResponse{} }
func (m *MCResponse) String() string { return proto.CompactTextString(m) }
func (*MCResponse) ProtoMessage()    {}
func (*MCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{40}
}

func (m *MCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MCResponse.Unmarshal(m, b)
}
func (m *MCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MCResponse.Marshal(b, m, deterministic)
}
func (m *MCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MCResponse.Merge(m, src)
}
func (m *MCResponse) XXX_Size() int {
	return xxx_messageInfo_MCResponse.Size(m)
}
func (m *MCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MCResponse proto.InternalMessageInfo

func (m *MCResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type DeliverRequest struct {
	Request              []byte   `protobuf:"bytes,1,opt,name=Request,proto3" json:"Request,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliverRequest) Reset()         { *m = DeliverRequest{} }
func (m *DeliverRequest) String() string { return proto.CompactTextString(m) }
func (*DeliverRequest) ProtoMessage()    {}
func (*DeliverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{41}
}

func (m *DeliverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliverRequest.Unmarshal(m, b)
}
func (m *DeliverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliverRequest.Marshal(b, m, deterministic)
}
func (m *DeliverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliverRequest.Merge(m, src)
}
func (m *DeliverRequest) XXX_Size() int {
	return xxx_messageInfo_DeliverRequest.Size(m)
}
func (m *DeliverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeliverRequest proto.InternalMessageInfo

func (m *DeliverRequest) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *DeliverRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type MigrateRequest struct {
	Payload         []byte `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Signature       []byte `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	SignatureHeader []byte `protobuf:"bytes,3,opt,name=SignatureHeader,proto3" json:"SignatureHeader,omitempty"`
	// Client-side debugging field
	StreamFinal          uint32   `protobuf:"varint,10,opt,name=StreamFinal,proto3" json:"StreamFinal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrateRequest) Reset()         { *m = MigrateRequest{} }
func (m *MigrateRequest) String() string { return proto.CompactTextString(m) }
func (*MigrateRequest) ProtoMessage()    {}
func (*MigrateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{42}
}

func (m *MigrateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateRequest.Unmarshal(m, b)
}
func (m *MigrateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateRequest.Marshal(b, m, deterministic)
}
func (m *MigrateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateRequest.Merge(m, src)
}
func (m *MigrateRequest) XXX_Size() int {
	return xxx_messageInfo_MigrateRequest.Size(m)
}
func (m *MigrateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateRequest proto.InternalMessageInfo

func (m *MigrateRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *MigrateRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *MigrateRequest) GetSignatureHeader() []byte {
	if m != nil {
		return m.SignatureHeader
	}
	return nil
}

func (m *MigrateRequest) GetStreamFinal() uint32 {
	if m != nil {
		return m.StreamFinal
	}
	return 0
}

type MigrateRequestPayload struct {
	StartBlkNum           uint64   `protobuf:"varint,1,opt,name=StartBlkNum,proto3" json:"StartBlkNum,omitempty"`
	HighestPreparedHeight uint64   `protobuf:"varint,2,opt,name=HighestPreparedHeight,proto3" json:"HighestPreparedHeight,omitempty"`
	CurrentBlockNum       uint64   `protobuf:"varint,3,opt,name=CurrentBlockNum,proto3" json:"CurrentBlockNum,omitempty"`
	Block                 *ECBlock `protobuf:"bytes,4,opt,name=Block,proto3" json:"Block,omitempty"`
	// Expected to be unmarshaled to NewViewTx
	NewViewTxBytes       []byte   `protobuf:"bytes,5,opt,name=NewViewTxBytes,proto3" json:"NewViewTxBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrateRequestPayload) Reset()         { *m = MigrateRequestPayload{} }
func (m *MigrateRequestPayload) String() string { return proto.CompactTextString(m) }
func (*MigrateRequestPayload) ProtoMessage()    {}
func (*MigrateRequestPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{43}
}

func (m *MigrateRequestPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateRequestPayload.Unmarshal(m, b)
}
func (m *MigrateRequestPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateRequestPayload.Marshal(b, m, deterministic)
}
func (m *MigrateRequestPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateRequestPayload.Merge(m, src)
}
func (m *MigrateRequestPayload) XXX_Size() int {
	return xxx_messageInfo_MigrateRequestPayload.Size(m)
}
func (m *MigrateRequestPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateRequestPayload.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateRequestPayload proto.InternalMessageInfo

func (m *MigrateRequestPayload) GetStartBlkNum() uint64 {
	if m != nil {
		return m.StartBlkNum
	}
	return 0
}

func (m *MigrateRequestPayload) GetHighestPreparedHeight() uint64 {
	if m != nil {
		return m.HighestPreparedHeight
	}
	return 0
}

func (m *MigrateRequestPayload) GetCurrentBlockNum() uint64 {
	if m != nil {
		return m.CurrentBlockNum
	}
	return 0
}

func (m *MigrateRequestPayload) GetBlock() *ECBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *MigrateRequestPayload) GetNewViewTxBytes() []byte {
	if m != nil {
		return m.NewViewTxBytes
	}
	return nil
}

type MigrateRequestStatePayload struct {
	State                *TxOutput `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MigrateRequestStatePayload) Reset()         { *m = MigrateRequestStatePayload{} }
func (m *MigrateRequestStatePayload) String() string { return proto.CompactTextString(m) }
func (*MigrateRequestStatePayload) ProtoMessage()    {}
func (*MigrateRequestStatePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{44}
}

func (m *MigrateRequestStatePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateRequestStatePayload.Unmarshal(m, b)
}
func (m *MigrateRequestStatePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateRequestStatePayload.Marshal(b, m, deterministic)
}
func (m *MigrateRequestStatePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateRequestStatePayload.Merge(m, src)
}
func (m *MigrateRequestStatePayload) XXX_Size() int {
	return xxx_messageInfo_MigrateRequestStatePayload.Size(m)
}
func (m *MigrateRequestStatePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateRequestStatePayload.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateRequestStatePayload proto.InternalMessageInfo

func (m *MigrateRequestStatePayload) GetState() *TxOutput {
	if m != nil {
		return m.State
	}
	return nil
}

type MigrateResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MigrateResponse) Reset()         { *m = MigrateResponse{} }
func (m *MigrateResponse) String() string { return proto.CompactTextString(m) }
func (*MigrateResponse) ProtoMessage()    {}
func (*MigrateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{45}
}

func (m *MigrateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrateResponse.Unmarshal(m, b)
}
func (m *MigrateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrateResponse.Marshal(b, m, deterministic)
}
func (m *MigrateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrateResponse.Merge(m, src)
}
func (m *MigrateResponse) XXX_Size() int {
	return xxx_messageInfo_MigrateResponse.Size(m)
}
func (m *MigrateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MigrateResponse proto.InternalMessageInfo

func (m *MigrateResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type HeartbeatPayload struct {
	Timeout              string   `protobuf:"bytes,1,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=Region,proto3" json:"Region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatPayload) Reset()         { *m = HeartbeatPayload{} }
func (m *HeartbeatPayload) String() string { return proto.CompactTextString(m) }
func (*HeartbeatPayload) ProtoMessage()    {}
func (*HeartbeatPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{46}
}

func (m *HeartbeatPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatPayload.Unmarshal(m, b)
}
func (m *HeartbeatPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatPayload.Marshal(b, m, deterministic)
}
func (m *HeartbeatPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatPayload.Merge(m, src)
}
func (m *HeartbeatPayload) XXX_Size() int {
	return xxx_messageInfo_HeartbeatPayload.Size(m)
}
func (m *HeartbeatPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatPayload.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatPayload proto.InternalMessageInfo

func (m *HeartbeatPayload) GetTimeout() string {
	if m != nil {
		return m.Timeout
	}
	return ""
}

func (m *HeartbeatPayload) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type HeartbeatTransaction struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	SignatureHeader      []byte   `protobuf:"bytes,3,opt,name=SignatureHeader,proto3" json:"SignatureHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatTransaction) Reset()         { *m = HeartbeatTransaction{} }
func (m *HeartbeatTransaction) String() string { return proto.CompactTextString(m) }
func (*HeartbeatTransaction) ProtoMessage()    {}
func (*HeartbeatTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{47}
}

func (m *HeartbeatTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatTransaction.Unmarshal(m, b)
}
func (m *HeartbeatTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatTransaction.Marshal(b, m, deterministic)
}
func (m *HeartbeatTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatTransaction.Merge(m, src)
}
func (m *HeartbeatTransaction) XXX_Size() int {
	return xxx_messageInfo_HeartbeatTransaction.Size(m)
}
func (m *HeartbeatTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatTransaction proto.InternalMessageInfo

func (m *HeartbeatTransaction) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *HeartbeatTransaction) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *HeartbeatTransaction) GetSignatureHeader() []byte {
	if m != nil {
		return m.SignatureHeader
	}
	return nil
}

type Policy struct {
	Level                ConsensusState_Level `protobuf:"varint,1,opt,name=level,proto3,enum=bsp_transaction.ConsensusState_Level" json:"level,omitempty"`
	QuorumSize           uint64               `protobuf:"varint,2,opt,name=QuorumSize,proto3" json:"QuorumSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{48}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetLevel() ConsensusState_Level {
	if m != nil {
		return m.Level
	}
	return ConsensusState_EC_Spec
}

func (m *Policy) GetQuorumSize() uint64 {
	if m != nil {
		return m.QuorumSize
	}
	return 0
}

type AggregatorSubscribeRequest struct {
	SubscriberId         string   `protobuf:"bytes,1,opt,name=SubscriberId,proto3" json:"SubscriberId,omitempty"`
	EventSourceId        string   `protobuf:"bytes,2,opt,name=EventSourceId,proto3" json:"EventSourceId,omitempty"`
	Policy               *Policy  `protobuf:"bytes,3,opt,name=Policy,proto3" json:"Policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregatorSubscribeRequest) Reset()         { *m = AggregatorSubscribeRequest{} }
func (m *AggregatorSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*AggregatorSubscribeRequest) ProtoMessage()    {}
func (*AggregatorSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{49}
}

func (m *AggregatorSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatorSubscribeRequest.Unmarshal(m, b)
}
func (m *AggregatorSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatorSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *AggregatorSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatorSubscribeRequest.Merge(m, src)
}
func (m *AggregatorSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_AggregatorSubscribeRequest.Size(m)
}
func (m *AggregatorSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatorSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatorSubscribeRequest proto.InternalMessageInfo

func (m *AggregatorSubscribeRequest) GetSubscriberId() string {
	if m != nil {
		return m.SubscriberId
	}
	return ""
}

func (m *AggregatorSubscribeRequest) GetEventSourceId() string {
	if m != nil {
		return m.EventSourceId
	}
	return ""
}

func (m *AggregatorSubscribeRequest) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type AggregatorResponse struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregatorResponse) Reset()         { *m = AggregatorResponse{} }
func (m *AggregatorResponse) String() string { return proto.CompactTextString(m) }
func (*AggregatorResponse) ProtoMessage()    {}
func (*AggregatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{50}
}

func (m *AggregatorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatorResponse.Unmarshal(m, b)
}
func (m *AggregatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatorResponse.Marshal(b, m, deterministic)
}
func (m *AggregatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatorResponse.Merge(m, src)
}
func (m *AggregatorResponse) XXX_Size() int {
	return xxx_messageInfo_AggregatorResponse.Size(m)
}
func (m *AggregatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatorResponse proto.InternalMessageInfo

func (m *AggregatorResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *AggregatorResponse) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *AggregatorResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type WorkerMessage struct {
	After                string   `protobuf:"bytes,1,opt,name=After,proto3" json:"After,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	SubmitterThreads     int32    `protobuf:"varint,3,opt,name=SubmitterThreads,proto3" json:"SubmitterThreads,omitempty"`
	ReceiverThreads      int32    `protobuf:"varint,4,opt,name=ReceiverThreads,proto3" json:"ReceiverThreads,omitempty"`
	BatchSize            int32    `protobuf:"varint,5,opt,name=BatchSize,proto3" json:"BatchSize,omitempty"`
	WorkloadSize         int32    `protobuf:"varint,6,opt,name=WorkloadSize,proto3" json:"WorkloadSize,omitempty"`
	SubmitDelay          string   `protobuf:"bytes,7,opt,name=SubmitDelay,proto3" json:"SubmitDelay,omitempty"`
	Args                 []string `protobuf:"bytes,10,rep,name=Args,proto3" json:"Args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkerMessage) Reset()         { *m = WorkerMessage{} }
func (m *WorkerMessage) String() string { return proto.CompactTextString(m) }
func (*WorkerMessage) ProtoMessage()    {}
func (*WorkerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{51}
}

func (m *WorkerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerMessage.Unmarshal(m, b)
}
func (m *WorkerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerMessage.Marshal(b, m, deterministic)
}
func (m *WorkerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerMessage.Merge(m, src)
}
func (m *WorkerMessage) XXX_Size() int {
	return xxx_messageInfo_WorkerMessage.Size(m)
}
func (m *WorkerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerMessage proto.InternalMessageInfo

func (m *WorkerMessage) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *WorkerMessage) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *WorkerMessage) GetSubmitterThreads() int32 {
	if m != nil {
		return m.SubmitterThreads
	}
	return 0
}

func (m *WorkerMessage) GetReceiverThreads() int32 {
	if m != nil {
		return m.ReceiverThreads
	}
	return 0
}

func (m *WorkerMessage) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *WorkerMessage) GetWorkloadSize() int32 {
	if m != nil {
		return m.WorkloadSize
	}
	return 0
}

func (m *WorkerMessage) GetSubmitDelay() string {
	if m != nil {
		return m.SubmitDelay
	}
	return ""
}

func (m *WorkerMessage) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type WaitForEventRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	Policy               *Policy  `protobuf:"bytes,3,opt,name=Policy,proto3" json:"Policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitForEventRequest) Reset()         { *m = WaitForEventRequest{} }
func (m *WaitForEventRequest) String() string { return proto.CompactTextString(m) }
func (*WaitForEventRequest) ProtoMessage()    {}
func (*WaitForEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{52}
}

func (m *WaitForEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitForEventRequest.Unmarshal(m, b)
}
func (m *WaitForEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitForEventRequest.Marshal(b, m, deterministic)
}
func (m *WaitForEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitForEventRequest.Merge(m, src)
}
func (m *WaitForEventRequest) XXX_Size() int {
	return xxx_messageInfo_WaitForEventRequest.Size(m)
}
func (m *WaitForEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitForEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitForEventRequest proto.InternalMessageInfo

func (m *WaitForEventRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *WaitForEventRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *WaitForEventRequest) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type WaitForEventResponse struct {
	Status               string          `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	TxEventPayload       *TxEventPayload `protobuf:"bytes,2,opt,name=TxEventPayload,proto3" json:"TxEventPayload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WaitForEventResponse) Reset()         { *m = WaitForEventResponse{} }
func (m *WaitForEventResponse) String() string { return proto.CompactTextString(m) }
func (*WaitForEventResponse) ProtoMessage()    {}
func (*WaitForEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{53}
}

func (m *WaitForEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitForEventResponse.Unmarshal(m, b)
}
func (m *WaitForEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitForEventResponse.Marshal(b, m, deterministic)
}
func (m *WaitForEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitForEventResponse.Merge(m, src)
}
func (m *WaitForEventResponse) XXX_Size() int {
	return xxx_messageInfo_WaitForEventResponse.Size(m)
}
func (m *WaitForEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitForEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WaitForEventResponse proto.InternalMessageInfo

func (m *WaitForEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *WaitForEventResponse) GetTxEventPayload() *TxEventPayload {
	if m != nil {
		return m.TxEventPayload
	}
	return nil
}

type ActiveExecutors struct {
	ExecutorAddress      []string `protobuf:"bytes,1,rep,name=ExecutorAddress,proto3" json:"ExecutorAddress,omitempty"`
	RemovedAddress       string   `protobuf:"bytes,2,opt,name=RemovedAddress,proto3" json:"RemovedAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActiveExecutors) Reset()         { *m = ActiveExecutors{} }
func (m *ActiveExecutors) String() string { return proto.CompactTextString(m) }
func (*ActiveExecutors) ProtoMessage()    {}
func (*ActiveExecutors) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{54}
}

func (m *ActiveExecutors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveExecutors.Unmarshal(m, b)
}
func (m *ActiveExecutors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveExecutors.Marshal(b, m, deterministic)
}
func (m *ActiveExecutors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveExecutors.Merge(m, src)
}
func (m *ActiveExecutors) XXX_Size() int {
	return xxx_messageInfo_ActiveExecutors.Size(m)
}
func (m *ActiveExecutors) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveExecutors.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveExecutors proto.InternalMessageInfo

func (m *ActiveExecutors) GetExecutorAddress() []string {
	if m != nil {
		return m.ExecutorAddress
	}
	return nil
}

func (m *ActiveExecutors) GetRemovedAddress() string {
	if m != nil {
		return m.RemovedAddress
	}
	return ""
}

type ActiveExecutorsResp struct {
	Resp                 string   `protobuf:"bytes,1,opt,name=Resp,proto3" json:"Resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActiveExecutorsResp) Reset()         { *m = ActiveExecutorsResp{} }
func (m *ActiveExecutorsResp) String() string { return proto.CompactTextString(m) }
func (*ActiveExecutorsResp) ProtoMessage()    {}
func (*ActiveExecutorsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{55}
}

func (m *ActiveExecutorsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveExecutorsResp.Unmarshal(m, b)
}
func (m *ActiveExecutorsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveExecutorsResp.Marshal(b, m, deterministic)
}
func (m *ActiveExecutorsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveExecutorsResp.Merge(m, src)
}
func (m *ActiveExecutorsResp) XXX_Size() int {
	return xxx_messageInfo_ActiveExecutorsResp.Size(m)
}
func (m *ActiveExecutorsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveExecutorsResp.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveExecutorsResp proto.InternalMessageInfo

func (m *ActiveExecutorsResp) GetResp() string {
	if m != nil {
		return m.Resp
	}
	return ""
}

type ReadPolicy struct {
	GatheredFrom         int32    `protobuf:"varint,1,opt,name=GatheredFrom,proto3" json:"GatheredFrom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPolicy) Reset()         { *m = ReadPolicy{} }
func (m *ReadPolicy) String() string { return proto.CompactTextString(m) }
func (*ReadPolicy) ProtoMessage()    {}
func (*ReadPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{56}
}

func (m *ReadPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPolicy.Unmarshal(m, b)
}
func (m *ReadPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPolicy.Marshal(b, m, deterministic)
}
func (m *ReadPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPolicy.Merge(m, src)
}
func (m *ReadPolicy) XXX_Size() int {
	return xxx_messageInfo_ReadPolicy.Size(m)
}
func (m *ReadPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPolicy proto.InternalMessageInfo

func (m *ReadPolicy) GetGatheredFrom() int32 {
	if m != nil {
		return m.GatheredFrom
	}
	return 0
}

// Single query request
type QueryRequest struct {
	ChannelID            string   `protobuf:"bytes,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	ChaincodeID          string   `protobuf:"bytes,2,opt,name=ChaincodeID,proto3" json:"ChaincodeID,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Extension            []byte   `protobuf:"bytes,4,opt,name=Extension,proto3" json:"Extension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{57}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *QueryRequest) GetChaincodeID() string {
	if m != nil {
		return m.ChaincodeID
	}
	return ""
}

func (m *QueryRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *QueryRequest) GetExtension() []byte {
	if m != nil {
		return m.Extension
	}
	return nil
}

// Single query resp
type QueryResponse struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{58}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *QueryResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type MainchainBlockDeliverRequest struct {
	RequestorId          string   `protobuf:"bytes,1,opt,name=RequestorId,proto3" json:"RequestorId,omitempty"`
	Region               string   `protobuf:"bytes,2,opt,name=Region,proto3" json:"Region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MainchainBlockDeliverRequest) Reset()         { *m = MainchainBlockDeliverRequest{} }
func (m *MainchainBlockDeliverRequest) String() string { return proto.CompactTextString(m) }
func (*MainchainBlockDeliverRequest) ProtoMessage()    {}
func (*MainchainBlockDeliverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{59}
}

func (m *MainchainBlockDeliverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MainchainBlockDeliverRequest.Unmarshal(m, b)
}
func (m *MainchainBlockDeliverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MainchainBlockDeliverRequest.Marshal(b, m, deterministic)
}
func (m *MainchainBlockDeliverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MainchainBlockDeliverRequest.Merge(m, src)
}
func (m *MainchainBlockDeliverRequest) XXX_Size() int {
	return xxx_messageInfo_MainchainBlockDeliverRequest.Size(m)
}
func (m *MainchainBlockDeliverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MainchainBlockDeliverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MainchainBlockDeliverRequest proto.InternalMessageInfo

func (m *MainchainBlockDeliverRequest) GetRequestorId() string {
	if m != nil {
		return m.RequestorId
	}
	return ""
}

func (m *MainchainBlockDeliverRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type MainchainBlockDeliverResponse struct {
	MCBlock              *MCBlock `protobuf:"bytes,1,opt,name=MCBlock,proto3" json:"MCBlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MainchainBlockDeliverResponse) Reset()         { *m = MainchainBlockDeliverResponse{} }
func (m *MainchainBlockDeliverResponse) String() string { return proto.CompactTextString(m) }
func (*MainchainBlockDeliverResponse) ProtoMessage()    {}
func (*MainchainBlockDeliverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{60}
}

func (m *MainchainBlockDeliverResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MainchainBlockDeliverResponse.Unmarshal(m, b)
}
func (m *MainchainBlockDeliverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MainchainBlockDeliverResponse.Marshal(b, m, deterministic)
}
func (m *MainchainBlockDeliverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MainchainBlockDeliverResponse.Merge(m, src)
}
func (m *MainchainBlockDeliverResponse) XXX_Size() int {
	return xxx_messageInfo_MainchainBlockDeliverResponse.Size(m)
}
func (m *MainchainBlockDeliverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MainchainBlockDeliverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MainchainBlockDeliverResponse proto.InternalMessageInfo

func (m *MainchainBlockDeliverResponse) GetMCBlock() *MCBlock {
	if m != nil {
		return m.MCBlock
	}
	return nil
}

type DeploySmartContractRequest struct {
	ChaincodeDeploymentSpec []byte   `protobuf:"bytes,1,opt,name=ChaincodeDeploymentSpec,proto3" json:"ChaincodeDeploymentSpec,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *DeploySmartContractRequest) Reset()         { *m = DeploySmartContractRequest{} }
func (m *DeploySmartContractRequest) String() string { return proto.CompactTextString(m) }
func (*DeploySmartContractRequest) ProtoMessage()    {}
func (*DeploySmartContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{61}
}

func (m *DeploySmartContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploySmartContractRequest.Unmarshal(m, b)
}
func (m *DeploySmartContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploySmartContractRequest.Marshal(b, m, deterministic)
}
func (m *DeploySmartContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploySmartContractRequest.Merge(m, src)
}
func (m *DeploySmartContractRequest) XXX_Size() int {
	return xxx_messageInfo_DeploySmartContractRequest.Size(m)
}
func (m *DeploySmartContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploySmartContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeploySmartContractRequest proto.InternalMessageInfo

func (m *DeploySmartContractRequest) GetChaincodeDeploymentSpec() []byte {
	if m != nil {
		return m.ChaincodeDeploymentSpec
	}
	return nil
}

type DeploySmartContractResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeploySmartContractResponse) Reset()         { *m = DeploySmartContractResponse{} }
func (m *DeploySmartContractResponse) String() string { return proto.CompactTextString(m) }
func (*DeploySmartContractResponse) ProtoMessage()    {}
func (*DeploySmartContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{62}
}

func (m *DeploySmartContractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploySmartContractResponse.Unmarshal(m, b)
}
func (m *DeploySmartContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploySmartContractResponse.Marshal(b, m, deterministic)
}
func (m *DeploySmartContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploySmartContractResponse.Merge(m, src)
}
func (m *DeploySmartContractResponse) XXX_Size() int {
	return xxx_messageInfo_DeploySmartContractResponse.Size(m)
}
func (m *DeploySmartContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploySmartContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeploySmartContractResponse proto.InternalMessageInfo

func (m *DeploySmartContractResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SmartContractArgs struct {
	ChaincodeId          string   `protobuf:"bytes,1,opt,name=ChaincodeId,proto3" json:"ChaincodeId,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty"`
	Policy               *Policy  `protobuf:"bytes,3,opt,name=Policy,proto3" json:"Policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmartContractArgs) Reset()         { *m = SmartContractArgs{} }
func (m *SmartContractArgs) String() string { return proto.CompactTextString(m) }
func (*SmartContractArgs) ProtoMessage()    {}
func (*SmartContractArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c911b32444db84, []int{63}
}

func (m *SmartContractArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmartContractArgs.Unmarshal(m, b)
}
func (m *SmartContractArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmartContractArgs.Marshal(b, m, deterministic)
}
func (m *SmartContractArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmartContractArgs.Merge(m, src)
}
func (m *SmartContractArgs) XXX_Size() int {
	return xxx_messageInfo_SmartContractArgs.Size(m)
}
func (m *SmartContractArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_SmartContractArgs.DiscardUnknown(m)
}

var xxx_messageInfo_SmartContractArgs proto.InternalMessageInfo

func (m *SmartContractArgs) GetChaincodeId() string {
	if m != nil {
		return m.ChaincodeId
	}
	return ""
}

func (m *SmartContractArgs) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *SmartContractArgs) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func init() {
	proto.RegisterEnum("bsp_transaction.ChangeTriggerCode", ChangeTriggerCode_name, ChangeTriggerCode_value)
	proto.RegisterEnum("bsp_transaction.BspTransactionType", BspTransactionType_name, BspTransactionType_value)
	proto.RegisterEnum("bsp_transaction.CommitEventReplyType", CommitEventReplyType_name, CommitEventReplyType_value)
	proto.RegisterEnum("bsp_transaction.EventUnit", EventUnit_name, EventUnit_value)
	proto.RegisterEnum("bsp_transaction.AuditType", AuditType_name, AuditType_value)
	proto.RegisterEnum("bsp_transaction.OrderingMethod", OrderingMethod_name, OrderingMethod_value)
	proto.RegisterEnum("bsp_transaction.ConsensusState_Result", ConsensusState_Result_name, ConsensusState_Result_value)
	proto.RegisterEnum("bsp_transaction.ConsensusState_Level", ConsensusState_Level_name, ConsensusState_Level_value)
	proto.RegisterType((*Version)(nil), "bsp_transaction.Version")
	proto.RegisterType((*VersionedValue)(nil), "bsp_transaction.VersionedValue")
	proto.RegisterType((*StateBatch)(nil), "bsp_transaction.StateBatch")
	proto.RegisterType((*KVRead)(nil), "bsp_transaction.KVRead")
	proto.RegisterType((*KVWrite)(nil), "bsp_transaction.KVWrite")
	proto.RegisterType((*TxInput)(nil), "bsp_transaction.TxInput")
	proto.RegisterType((*VersionMap)(nil), "bsp_transaction.VersionMap")
	proto.RegisterType((*TxOutput)(nil), "bsp_transaction.TxOutput")
	proto.RegisterType((*ChangeTriggerEvent)(nil), "bsp_transaction.ChangeTriggerEvent")
	proto.RegisterType((*BspTransaction)(nil), "bsp_transaction.BspTransaction")
	proto.RegisterType((*TxMetadata)(nil), "bsp_transaction.TxMetadata")
	proto.RegisterType((*CommitEventRequestByClientID)(nil), "bsp_transaction.CommitEventRequestByClientID")
	proto.RegisterType((*TxEventPayload)(nil), "bsp_transaction.TxEventPayload")
	proto.RegisterType((*TxEvent)(nil), "bsp_transaction.TxEvent")
	proto.RegisterType((*TransactionCommitEvent)(nil), "bsp_transaction.TransactionCommitEvent")
	proto.RegisterType((*BFTEvent)(nil), "bsp_transaction.BFTEvent")
	proto.RegisterType((*BFTEventByTx)(nil), "bsp_transaction.BFTEventByTx")
	proto.RegisterType((*TSAEvent)(nil), "bsp_transaction.TSAEvent")
	proto.RegisterType((*CommitEventResponse)(nil), "bsp_transaction.CommitEventResponse")
	proto.RegisterType((*Proposal)(nil), "bsp_transaction.Proposal")
	proto.RegisterType((*ProposalBatch)(nil), "bsp_transaction.ProposalBatch")
	proto.RegisterType((*ProposalResponseBatch)(nil), "bsp_transaction.ProposalResponseBatch")
	proto.RegisterType((*ProposalPayload)(nil), "bsp_transaction.ProposalPayload")
	proto.RegisterType((*SignatureHeader)(nil), "bsp_transaction.SignatureHeader")
	proto.RegisterType((*ProposalResponse)(nil), "bsp_transaction.ProposalResponse")
	proto.RegisterType((*InitializeRequest)(nil), "bsp_transaction.InitializeRequest")
	proto.RegisterType((*HelloRequest)(nil), "bsp_transaction.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "bsp_transaction.HelloResponse")
	proto.RegisterType((*AuditTransaction)(nil), "bsp_transaction.AuditTransaction")
	proto.RegisterType((*AuditTransactionPayload)(nil), "bsp_transaction.AuditTransactionPayload")
	proto.RegisterType((*AuditTransactionExtension)(nil), "bsp_transaction.AuditTransactionExtension")
	proto.RegisterType((*MCBuildParameter)(nil), "bsp_transaction.MCBuildParameter")
	proto.RegisterType((*BuildParameterOfIndexBasedOrdering)(nil), "bsp_transaction.BuildParameterOfIndexBasedOrdering")
	proto.RegisterType((*BuildParameterOfDependencyGraphBasedReOrdering)(nil), "bsp_transaction.BuildParameterOfDependencyGraphBasedReOrdering")
	proto.RegisterType((*ConsensusState)(nil), "bsp_transaction.ConsensusState")
	proto.RegisterType((*InterTxResult)(nil), "bsp_transaction.InterTxResult")
	proto.RegisterType((*MCHeader)(nil), "bsp_transaction.MCHeader")
	proto.RegisterType((*MCBlock)(nil), "bsp_transaction.MCBlock")
	proto.RegisterType((*ECHeader)(nil), "bsp_transaction.ECHeader")
	proto.RegisterType((*ECBlock)(nil), "bsp_transaction.ECBlock")
	proto.RegisterType((*MCResponse)(nil), "bsp_transaction.MCResponse")
	proto.RegisterType((*DeliverRequest)(nil), "bsp_transaction.DeliverRequest")
	proto.RegisterType((*MigrateRequest)(nil), "bsp_transaction.MigrateRequest")
	proto.RegisterType((*MigrateRequestPayload)(nil), "bsp_transaction.MigrateRequestPayload")
	proto.RegisterType((*MigrateRequestStatePayload)(nil), "bsp_transaction.MigrateRequestStatePayload")
	proto.RegisterType((*MigrateResponse)(nil), "bsp_transaction.MigrateResponse")
	proto.RegisterType((*HeartbeatPayload)(nil), "bsp_transaction.HeartbeatPayload")
	proto.RegisterType((*HeartbeatTransaction)(nil), "bsp_transaction.HeartbeatTransaction")
	proto.RegisterType((*Policy)(nil), "bsp_transaction.Policy")
	proto.RegisterType((*AggregatorSubscribeRequest)(nil), "bsp_transaction.AggregatorSubscribeRequest")
	proto.RegisterType((*AggregatorResponse)(nil), "bsp_transaction.AggregatorResponse")
	proto.RegisterType((*WorkerMessage)(nil), "bsp_transaction.WorkerMessage")
	proto.RegisterType((*WaitForEventRequest)(nil), "bsp_transaction.WaitForEventRequest")
	proto.RegisterType((*WaitForEventResponse)(nil), "bsp_transaction.WaitForEventResponse")
	proto.RegisterType((*ActiveExecutors)(nil), "bsp_transaction.ActiveExecutors")
	proto.RegisterType((*ActiveExecutorsResp)(nil), "bsp_transaction.ActiveExecutorsResp")
	proto.RegisterType((*ReadPolicy)(nil), "bsp_transaction.ReadPolicy")
	proto.RegisterType((*QueryRequest)(nil), "bsp_transaction.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "bsp_transaction.QueryResponse")
	proto.RegisterType((*MainchainBlockDeliverRequest)(nil), "bsp_transaction.MainchainBlockDeliverRequest")
	proto.RegisterType((*MainchainBlockDeliverResponse)(nil), "bsp_transaction.MainchainBlockDeliverResponse")
	proto.RegisterType((*DeploySmartContractRequest)(nil), "bsp_transaction.DeploySmartContractRequest")
	proto.RegisterType((*DeploySmartContractResponse)(nil), "bsp_transaction.DeploySmartContractResponse")
	proto.RegisterType((*SmartContractArgs)(nil), "bsp_transaction.SmartContractArgs")
}

func init() { proto.RegisterFile("bsp_transaction.proto", fileDescriptor_65c911b32444db84) }

var fileDescriptor_65c911b32444db84 = []byte{
	// 3468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x3a, 0xcf, 0x6f, 0x1b, 0xc7,
	0xd5, 0x5e, 0xfe, 0x14, 0x9f, 0x28, 0x6a, 0x3d, 0xb6, 0x64, 0x86, 0x71, 0x14, 0x79, 0xed, 0xf8,
	0x73, 0x94, 0x2f, 0xb2, 0xa3, 0xe4, 0x8b, 0x3f, 0x7c, 0xf9, 0x10, 0x40, 0x22, 0x29, 0x89, 0xb5,
	0x29, 0x29, 0x4b, 0x5a, 0x0e, 0xda, 0xa0, 0xec, 0x8a, 0x3b, 0x26, 0x17, 0x22, 0x77, 0x99, 0xd9,
	0x25, 0x4d, 0xe6, 0xd0, 0x43, 0x5b, 0xa0, 0x40, 0x9b, 0xf6, 0xd2, 0x02, 0x3d, 0xf4, 0xd0, 0x7b,
	0x2f, 0x05, 0x9a, 0x02, 0xfd, 0x63, 0x7a, 0xee, 0xb9, 0xc8, 0xb5, 0xa7, 0x62, 0x7e, 0xed, 0x4f,
	0x52, 0x92, 0x91, 0xba, 0x27, 0xee, 0xbc, 0x79, 0xef, 0xcd, 0xcc, 0x7b, 0x6f, 0xde, 0xaf, 0x21,
	0xac, 0x9d, 0xb9, 0xa3, 0x8e, 0x47, 0x0c, 0xdb, 0x35, 0xba, 0x9e, 0xe5, 0xd8, 0xdb, 0x23, 0xe2,
	0x78, 0x0e, 0x5a, 0x8d, 0x81, 0xb5, 0x03, 0xc8, 0x9f, 0x62, 0xe2, 0x5a, 0x8e, 0x8d, 0x36, 0x61,
	0x79, 0x6f, 0xe0, 0x74, 0xcf, 0x8f, 0xc6, 0xc3, 0x33, 0x4c, 0xca, 0xca, 0xa6, 0xf2, 0x20, 0xa3,
	0x87, 0x41, 0xa8, 0x02, 0x4b, 0xed, 0xe9, 0xf1, 0x8b, 0x17, 0x2e, 0xf6, 0xca, 0x29, 0x36, 0xed,
	0x8f, 0xb5, 0xef, 0x43, 0x49, 0x30, 0xc2, 0xe6, 0xa9, 0x31, 0x18, 0x63, 0x74, 0x13, 0xb2, 0xec,
	0x83, 0x71, 0x2a, 0xea, 0x7c, 0x80, 0x76, 0xfc, 0x05, 0x19, 0x8b, 0xe5, 0x9d, 0xf2, 0x76, 0x7c,
	0xab, 0x62, 0x5e, 0x97, 0x88, 0xda, 0x31, 0x40, 0xcb, 0x33, 0x3c, 0xbc, 0x67, 0x78, 0xdd, 0x3e,
	0x52, 0x21, 0xfd, 0x04, 0xcf, 0x18, 0xd7, 0x82, 0x4e, 0x3f, 0xd1, 0x43, 0x48, 0x9d, 0x9e, 0x0a,
	0x76, 0x6f, 0x2f, 0x62, 0x27, 0xb6, 0xa5, 0xa7, 0x4e, 0x4f, 0x35, 0x13, 0x72, 0x4f, 0x4e, 0x75,
	0x6c, 0x98, 0x94, 0xd9, 0x79, 0xc0, 0xec, 0x1c, 0xcf, 0xe8, 0xb6, 0x27, 0x6c, 0xdb, 0x29, 0xbe,
	0xed, 0x89, 0xdc, 0xf6, 0x44, 0x6c, 0x3b, 0x7d, 0xd9, 0xb6, 0x05, 0xa2, 0x86, 0x21, 0xff, 0xe4,
	0xf4, 0x39, 0xb1, 0x3c, 0xfc, 0x5a, 0x97, 0xf9, 0x93, 0x02, 0xf9, 0xf6, 0xb4, 0x61, 0x8f, 0xc6,
	0x1e, 0xba, 0x03, 0xc5, 0x6e, 0xdf, 0xb0, 0xec, 0xae, 0x63, 0xe2, 0x8e, 0x65, 0x8a, 0x05, 0x97,
	0x7d, 0x58, 0xc3, 0x44, 0xef, 0xc1, 0xf5, 0x00, 0x65, 0x12, 0x52, 0x45, 0x41, 0x57, 0xfd, 0x09,
	0x69, 0x13, 0xef, 0x40, 0x29, 0x40, 0x36, 0x48, 0xcf, 0x2d, 0xa7, 0x37, 0xd3, 0x0f, 0x0a, 0xfa,
	0x8a, 0x0f, 0xdd, 0x25, 0x3d, 0x17, 0xbd, 0x0f, 0x59, 0x82, 0x0d, 0xd3, 0x2d, 0x67, 0x36, 0xd3,
	0x0f, 0x96, 0x77, 0x6e, 0x25, 0x36, 0xcd, 0xa5, 0xad, 0x73, 0x2c, 0xed, 0x8f, 0x0a, 0x80, 0x58,
	0xa1, 0x69, 0x8c, 0xe6, 0x28, 0xb4, 0x06, 0x6a, 0xdd, 0xec, 0x61, 0xb6, 0xc8, 0x55, 0xad, 0x25,
	0x41, 0x41, 0xb9, 0x34, 0xe9, 0x2e, 0xc3, 0x5c, 0x2e, 0x93, 0x6a, 0x82, 0x42, 0xfb, 0x7f, 0x66,
	0xf4, 0x63, 0x8f, 0x8a, 0xf7, 0x11, 0xe4, 0x5e, 0x52, 0x7d, 0xba, 0x65, 0x85, 0x1d, 0xb4, 0x3c,
	0xe7, 0xa0, 0x4c, 0xe1, 0xba, 0xc0, 0xd3, 0x7e, 0xad, 0x00, 0xaa, 0xf6, 0x0d, 0xbb, 0x87, 0xdb,
	0xc4, 0xea, 0xf5, 0x30, 0xa9, 0x4f, 0xb0, 0xed, 0xa1, 0x8f, 0x21, 0x53, 0x75, 0x4c, 0x7e, 0x35,
	0x4a, 0x3b, 0x5a, 0x82, 0x4d, 0x84, 0x84, 0x62, 0xea, 0x0c, 0x1f, 0x95, 0x21, 0x7f, 0x62, 0xcc,
	0x06, 0x8e, 0x61, 0x0a, 0xbb, 0x91, 0x43, 0x74, 0x1f, 0x4a, 0xd5, 0x31, 0x21, 0xa7, 0x16, 0x7e,
	0x29, 0x2e, 0x70, 0x9a, 0xdd, 0xd0, 0x18, 0x54, 0xfb, 0x67, 0x0a, 0x4a, 0x7b, 0xee, 0xa8, 0x1d,
	0x2c, 0x46, 0xaf, 0x75, 0x75, 0x60, 0x61, 0xdb, 0x6b, 0x48, 0x83, 0xf1, 0xc7, 0x08, 0x41, 0xa6,
	0x3d, 0x6d, 0x98, 0xc2, 0x40, 0xd8, 0x37, 0xd5, 0x57, 0x0b, 0x7f, 0x29, 0xf8, 0xd3, 0x4f, 0xb4,
	0x0d, 0x59, 0x66, 0x7f, 0xe5, 0xcc, 0x02, 0xf1, 0x0a, 0xfb, 0xd4, 0x39, 0x1a, 0xfa, 0x00, 0x72,
	0x5c, 0xa2, 0xe5, 0x2c, 0x23, 0x78, 0x63, 0x0e, 0x01, 0x47, 0xd0, 0x05, 0x22, 0xba, 0x0d, 0x85,
	0x96, 0xd5, 0xb3, 0x0d, 0x6f, 0x4c, 0x70, 0x39, 0xc7, 0xce, 0x1e, 0x00, 0xe8, 0x11, 0x4e, 0x88,
	0x33, 0x72, 0x5c, 0x63, 0x50, 0xce, 0xb3, 0x49, 0x7f, 0x8c, 0x1e, 0x43, 0xc6, 0x9b, 0x8d, 0x70,
	0x19, 0x98, 0xac, 0xef, 0x26, 0x96, 0x8a, 0x4a, 0xa3, 0x3d, 0x1b, 0x61, 0x9d, 0x11, 0xa0, 0x75,
	0xc8, 0xe9, 0xb8, 0x47, 0xad, 0x66, 0x99, 0x9d, 0x5e, 0x8c, 0xa8, 0x12, 0xaa, 0xd4, 0x42, 0x1a,
	0xb5, 0x72, 0x91, 0x4d, 0xc8, 0x21, 0xda, 0x00, 0x68, 0x4f, 0x9b, 0xd8, 0x33, 0x4c, 0xc3, 0x33,
	0xca, 0x37, 0xd9, 0x46, 0x42, 0x10, 0x66, 0xf8, 0xc1, 0x10, 0x3d, 0x82, 0x1b, 0x4d, 0xec, 0x11,
	0xab, 0xdb, 0x1a, 0x9f, 0x0d, 0x2d, 0xcf, 0xc3, 0x66, 0xdb, 0x1a, 0x72, 0xa3, 0x48, 0xe9, 0xf3,
	0xa6, 0xd0, 0xa7, 0x50, 0xe1, 0x60, 0xdf, 0x4c, 0x77, 0x09, 0xb1, 0x26, 0xc6, 0x80, 0x11, 0xa6,
	0x18, 0xe1, 0x05, 0x18, 0x68, 0x0b, 0x54, 0x3e, 0x5b, 0x75, 0x86, 0x43, 0xcb, 0x63, 0x54, 0x69,
	0x46, 0x95, 0x80, 0x6b, 0xbf, 0x50, 0xe0, 0x36, 0x1f, 0x32, 0x9b, 0xd5, 0xf1, 0x97, 0x63, 0xec,
	0x7a, 0x7b, 0x33, 0x61, 0x1b, 0x35, 0x2a, 0x9f, 0x3e, 0x36, 0x4c, 0x11, 0x2b, 0x0a, 0xba, 0x18,
	0xa1, 0x37, 0xa1, 0xd0, 0x65, 0x38, 0xd4, 0x03, 0x71, 0xc3, 0x59, 0xea, 0x4a, 0x83, 0xba, 0x0d,
	0x05, 0xd7, 0xd7, 0x63, 0x9a, 0xeb, 0xd1, 0x07, 0xa0, 0x5b, 0x90, 0x1f, 0x61, 0x4c, 0x28, 0x61,
	0x86, 0xf3, 0xa4, 0xc3, 0x86, 0xa9, 0x7d, 0xab, 0x40, 0xa9, 0x3d, 0x65, 0x1b, 0x91, 0x16, 0x1f,
	0x98, 0x6d, 0x2d, 0x66, 0xb6, 0xb5, 0xb9, 0x66, 0xbb, 0x0e, 0xb9, 0xc8, 0xcd, 0x10, 0x23, 0x0a,
	0x17, 0x31, 0x2d, 0xc3, 0xe1, 0x7c, 0x84, 0xfe, 0x07, 0xb2, 0x2c, 0xea, 0x08, 0x1b, 0x4d, 0x06,
	0x96, 0xaa, 0x63, 0xbb, 0xd8, 0x76, 0xc7, 0x2e, 0x43, 0xd3, 0x39, 0x36, 0x15, 0xf1, 0x6e, 0xd7,
	0xb3, 0x26, 0x78, 0xaf, 0x75, 0xb2, 0x6b, 0x9a, 0x04, 0xbb, 0x2e, 0xb3, 0xd7, 0x82, 0x9e, 0x80,
	0x53, 0x61, 0xd4, 0xa7, 0x1e, 0xb6, 0x99, 0x6b, 0x02, 0x2e, 0x0c, 0x1f, 0xa0, 0x9d, 0x53, 0xbf,
	0xce, 0xfd, 0x45, 0xe8, 0xde, 0x2b, 0xd1, 0x7b, 0x1f, 0xb9, 0x17, 0xa9, 0xf8, 0xbd, 0x78, 0x00,
	0xab, 0xfe, 0xe0, 0x90, 0xeb, 0x8a, 0xcb, 0x3c, 0x0e, 0xd6, 0xfe, 0x9a, 0x82, 0xf5, 0xd0, 0x35,
	0x08, 0x29, 0x3e, 0xaa, 0x4f, 0x25, 0xa6, 0xcf, 0x7b, 0x50, 0xb2, 0x6c, 0x13, 0x4f, 0x3b, 0x96,
	0xdd, 0x39, 0xa3, 0xb9, 0x02, 0xdb, 0x44, 0x56, 0x2f, 0x32, 0x68, 0xc3, 0x66, 0xf9, 0x03, 0xd5,
	0x87, 0x37, 0xb5, 0x4c, 0xb6, 0x78, 0x41, 0x67, 0xdf, 0xe8, 0xbf, 0x60, 0x75, 0x62, 0x0c, 0x2c,
	0xd3, 0xa0, 0xeb, 0x75, 0x68, 0x2c, 0x61, 0x0a, 0xc8, 0xea, 0xa5, 0x00, 0xcc, 0x9c, 0x5e, 0x3c,
	0xa8, 0x65, 0xaf, 0x18, 0xd4, 0x72, 0x0b, 0x82, 0x5a, 0xc8, 0xc8, 0xf2, 0x61, 0x23, 0xa3, 0x96,
	0x60, 0x73, 0x0b, 0x59, 0xe2, 0x96, 0xc0, 0x47, 0x51, 0x9b, 0x2d, 0xc4, 0x6c, 0x56, 0xfb, 0xb3,
	0x02, 0x4b, 0x7b, 0xfb, 0x6d, 0x2e, 0xab, 0x77, 0xa0, 0x34, 0x22, 0x78, 0x64, 0x10, 0xdc, 0xe9,
	0x63, 0xab, 0xd7, 0x97, 0x89, 0xd2, 0x8a, 0x80, 0x1e, 0x32, 0x20, 0xba, 0x0b, 0x2b, 0x5d, 0x26,
	0x61, 0x89, 0xc5, 0x4d, 0xb2, 0xc8, 0x81, 0x01, 0xd2, 0xc0, 0xf0, 0xb0, 0xeb, 0x23, 0x71, 0xfb,
	0x2c, 0x72, 0xa0, 0x40, 0x0a, 0x1d, 0x26, 0x1b, 0x39, 0x4c, 0x64, 0xd3, 0xb9, 0xf8, 0xa6, 0x27,
	0x50, 0x94, 0x7b, 0xde, 0x9b, 0xb5, 0xa7, 0xbe, 0x82, 0x94, 0x90, 0x82, 0x2e, 0xbc, 0xc7, 0xa1,
	0x75, 0xd3, 0x8b, 0xd7, 0xcd, 0xc4, 0xd7, 0xed, 0xc2, 0x52, 0xbb, 0xb5, 0xcb, 0x65, 0x75, 0x07,
	0x8a, 0x9e, 0x6b, 0x74, 0x2c, 0x13, 0xdb, 0x9e, 0xe5, 0xc9, 0x04, 0x60, 0xd9, 0x73, 0x8d, 0x86,
	0x00, 0x71, 0x17, 0x13, 0x12, 0xa3, 0x18, 0x5d, 0xec, 0x45, 0xb4, 0xdf, 0x28, 0x70, 0x23, 0xe2,
	0xb9, 0xdc, 0x11, 0xbd, 0xaa, 0xa8, 0x06, 0x40, 0xf0, 0x68, 0x30, 0xeb, 0xb0, 0x78, 0xc0, 0x63,
	0xef, 0x3b, 0x73, 0xae, 0x75, 0x88, 0x72, 0x34, 0x98, 0xb1, 0x88, 0x50, 0x20, 0xf2, 0x93, 0xde,
	0xc5, 0x51, 0x34, 0x06, 0x8f, 0x82, 0xbb, 0x78, 0xc1, 0xae, 0x06, 0x41, 0x8c, 0xfa, 0x0f, 0xdc,
	0xe7, 0x1a, 0xac, 0xc8, 0xd5, 0x78, 0xda, 0xfc, 0x21, 0xe4, 0xd9, 0x87, 0x9f, 0xbc, 0x24, 0x83,
	0xae, 0x24, 0xd0, 0x25, 0xa6, 0xd6, 0x86, 0x35, 0x1f, 0x28, 0xa4, 0xc8, 0xb9, 0x7d, 0x12, 0xe7,
	0x76, 0x67, 0x31, 0x37, 0x41, 0x18, 0x70, 0xfd, 0x46, 0x81, 0x55, 0x39, 0x9b, 0xf4, 0xe6, 0x57,
	0x4b, 0x42, 0x36, 0x61, 0xb9, 0x1a, 0x38, 0x00, 0x61, 0x83, 0x61, 0x10, 0xba, 0x07, 0x2b, 0xd5,
	0x70, 0x96, 0xca, 0x92, 0xd3, 0x82, 0x1e, 0x05, 0x52, 0x89, 0xfa, 0x1e, 0x97, 0xed, 0x85, 0xdf,
	0xa3, 0xa2, 0x1e, 0x07, 0x6b, 0xbb, 0x09, 0xd9, 0x53, 0x35, 0x76, 0x09, 0x36, 0x3c, 0x87, 0x48,
	0x35, 0x8a, 0x21, 0x4d, 0xef, 0x6d, 0xc7, 0xee, 0xfa, 0xe9, 0x3d, 0x1b, 0x68, 0xbf, 0x52, 0x40,
	0x8d, 0x8b, 0x25, 0x6c, 0x4f, 0xca, 0x05, 0xf6, 0x94, 0x8a, 0xc7, 0xca, 0x77, 0x41, 0xf5, 0x07,
	0x9d, 0x7e, 0xc4, 0x18, 0xdc, 0xd8, 0x3e, 0xd7, 0x21, 0xe7, 0x7a, 0x86, 0x37, 0x76, 0x65, 0x54,
	0xe5, 0x23, 0xed, 0x06, 0x5c, 0x6f, 0xd8, 0x96, 0x67, 0x19, 0x03, 0xeb, 0x2b, 0x2c, 0x02, 0xbc,
	0xb6, 0x09, 0xc5, 0x43, 0x3c, 0x18, 0x38, 0x62, 0x4c, 0xd3, 0xbd, 0xa1, 0xdb, 0x93, 0xe9, 0xf9,
	0xd0, 0xed, 0x69, 0x77, 0x60, 0x45, 0x60, 0x88, 0x23, 0x24, 0x51, 0xc6, 0xa0, 0xee, 0x8e, 0x4d,
	0xcb, 0x0b, 0xe7, 0x99, 0xaf, 0xff, 0xa0, 0xda, 0x1f, 0xd2, 0x70, 0x2b, 0xbe, 0xae, 0xb4, 0xb0,
	0x6d, 0x91, 0x07, 0xf2, 0x7b, 0x5f, 0x49, 0xd8, 0x2b, 0xa7, 0x0b, 0xd2, 0xbf, 0x50, 0x9a, 0x97,
	0x8a, 0xa6, 0x79, 0x15, 0x58, 0xe2, 0xa9, 0x60, 0xa3, 0x26, 0x0c, 0xcf, 0x1f, 0xd3, 0x39, 0x1e,
	0xe6, 0x1b, 0x35, 0x21, 0x6c, 0x7f, 0xcc, 0xee, 0xb6, 0x67, 0xd8, 0x67, 0xb3, 0x46, 0xcd, 0x2d,
	0x67, 0x99, 0x35, 0x06, 0x00, 0xdf, 0xca, 0x73, 0x73, 0x73, 0x16, 0x88, 0xe4, 0x2c, 0x08, 0x32,
	0x87, 0x86, 0xdb, 0x67, 0x89, 0x69, 0x51, 0x67, 0xdf, 0x3c, 0x07, 0xc6, 0x13, 0x06, 0x2f, 0xca,
	0x1c, 0x98, 0x8f, 0x29, 0x9f, 0x26, 0x66, 0x7c, 0x56, 0xb8, 0x01, 0xf0, 0x11, 0xad, 0x1a, 0x9a,
	0x98, 0x9c, 0x0f, 0xb0, 0xee, 0x38, 0x1e, 0xa3, 0x2c, 0x31, 0xca, 0x18, 0x94, 0x26, 0x35, 0x55,
	0x6e, 0xd9, 0x81, 0x73, 0x5a, 0x65, 0x98, 0x09, 0x38, 0x3d, 0x25, 0xf6, 0x93, 0x1a, 0x9e, 0x03,
	0x07, 0x00, 0xed, 0x1f, 0x0a, 0xbc, 0x11, 0xd7, 0x90, 0x7f, 0xd3, 0xd0, 0x3e, 0xcd, 0x26, 0x3c,
	0x4c, 0xda, 0x53, 0x1d, 0xbb, 0xe3, 0x81, 0xc7, 0xeb, 0xcd, 0xe5, 0x9d, 0x8d, 0x84, 0xb6, 0x1a,
	0x61, 0x34, 0x3d, 0x46, 0x85, 0xea, 0x50, 0x6c, 0x56, 0x47, 0x06, 0x31, 0x86, 0xd8, 0xc3, 0xc4,
	0x15, 0x75, 0x49, 0xd2, 0x47, 0x35, 0xab, 0x7b, 0x63, 0x6b, 0x60, 0x9e, 0x48, 0x4c, 0x3d, 0x42,
	0x86, 0xaa, 0xb0, 0xea, 0xa7, 0xd1, 0xc2, 0xdd, 0x2e, 0x2a, 0x58, 0x9a, 0x55, 0x8e, 0xa0, 0xc7,
	0x29, 0xb4, 0x9f, 0x2a, 0xa0, 0xc6, 0xd7, 0x41, 0x07, 0x50, 0x3a, 0x26, 0x26, 0x26, 0x96, 0xdd,
	0x6b, 0x62, 0xaf, 0xef, 0x98, 0xc2, 0x2c, 0x93, 0x59, 0x66, 0x14, 0x4d, 0x8f, 0x91, 0x51, 0x0d,
	0x46, 0x59, 0x8b, 0xfb, 0x13, 0x83, 0x6a, 0x67, 0xa0, 0x45, 0x21, 0xc7, 0x2f, 0x1a, 0x34, 0x43,
	0xdb, 0x33, 0x5c, 0x6c, 0x4a, 0x9e, 0xb4, 0x80, 0xd9, 0x1b, 0x77, 0xcf, 0xb1, 0xd7, 0xb2, 0xbe,
	0xc2, 0xa2, 0x05, 0x14, 0x82, 0x50, 0xdd, 0x36, 0xab, 0xb4, 0x3a, 0x70, 0xc6, 0x9e, 0x30, 0xfd,
	0x00, 0xa0, 0x7d, 0x01, 0xdb, 0xf1, 0x35, 0x6a, 0x78, 0x84, 0x6d, 0x13, 0xdb, 0xdd, 0xd9, 0x01,
	0x31, 0x46, 0x7d, 0xb6, 0x9a, 0x8e, 0xfd, 0xf5, 0xb6, 0x40, 0x0d, 0x46, 0x21, 0x41, 0x14, 0xf4,
	0x04, 0x5c, 0xfb, 0x7b, 0x0a, 0x4a, 0xd1, 0x94, 0x1b, 0x7d, 0x02, 0xd9, 0x01, 0x9e, 0xe0, 0xc1,
	0x05, 0xb1, 0x3c, 0x8c, 0xbf, 0xfd, 0x94, 0x22, 0xeb, 0x9c, 0x06, 0x7d, 0x0a, 0x39, 0xc2, 0xcc,
	0x85, 0x49, 0xac, 0xb4, 0x73, 0xff, 0x32, 0x6a, 0x61, 0x6b, 0x82, 0x4a, 0x7b, 0x9b, 0x96, 0x87,
	0xf4, 0x0b, 0x01, 0xe4, 0x78, 0xd2, 0xa0, 0x5e, 0x43, 0x05, 0xc8, 0xee, 0x9e, 0x39, 0xc4, 0x53,
	0x15, 0xed, 0x2f, 0x0a, 0x64, 0xd9, 0x8a, 0x68, 0x19, 0xf2, 0xf5, 0x6a, 0xa7, 0x35, 0xc2, 0x5d,
	0xf5, 0x1a, 0x2a, 0x01, 0xd4, 0xab, 0x1d, 0x76, 0x38, 0x6c, 0xaa, 0x0a, 0x5a, 0x85, 0xe5, 0x7a,
	0xb5, 0x73, 0xc2, 0xf3, 0x43, 0x53, 0x4d, 0xa1, 0x15, 0x28, 0xd4, 0xab, 0x1d, 0xc1, 0x31, 0x4d,
	0xf1, 0x9b, 0x01, 0x7e, 0x86, 0x4e, 0x37, 0xfd, 0xe9, 0x2c, 0x25, 0x6f, 0x52, 0x72, 0xa7, 0x47,
	0x4b, 0x0a, 0x35, 0x87, 0xf2, 0x90, 0x6e, 0xb7, 0x76, 0x55, 0x40, 0x15, 0x58, 0xaf, 0x57, 0x3b,
	0xb4, 0xf6, 0x8f, 0xb4, 0x13, 0xb0, 0xa9, 0xae, 0xa1, 0x37, 0x60, 0x2d, 0x32, 0xb7, 0x6f, 0xd9,
	0x96, 0xdb, 0xc7, 0xa6, 0xba, 0xae, 0x7d, 0x93, 0x86, 0x95, 0xc8, 0xed, 0x0a, 0x2a, 0x21, 0xe5,
	0x95, 0x2a, 0x21, 0xee, 0xd0, 0x6a, 0xa1, 0xb0, 0x5d, 0x0b, 0x3a, 0x45, 0xe9, 0xab, 0x74, 0x8a,
	0x42, 0x0d, 0x97, 0xcc, 0xd5, 0x1a, 0x2e, 0x61, 0xaf, 0x9d, 0x5d, 0xec, 0xb5, 0x73, 0x17, 0x78,
	0xed, 0x7c, 0xcc, 0x6b, 0x7f, 0x4c, 0xe5, 0x2d, 0xfb, 0x47, 0x4b, 0x97, 0xf4, 0x8f, 0x02, 0x54,
	0xca, 0x73, 0x28, 0x5b, 0x01, 0xbc, 0x68, 0xf0, 0xc7, 0xe8, 0x23, 0x58, 0xaa, 0x57, 0x79, 0x06,
	0xcf, 0x3c, 0xfb, 0x45, 0x2c, 0x7d, 0xcc, 0x48, 0xc5, 0xbb, 0x1c, 0xad, 0x78, 0xb5, 0xaf, 0xd3,
	0xb0, 0x24, 0x7d, 0x10, 0xcd, 0x3e, 0x74, 0x67, 0x6c, 0x9b, 0xe2, 0x06, 0xf3, 0x41, 0x28, 0x98,
	0xa4, 0xe6, 0x06, 0x93, 0xf4, 0x82, 0x60, 0x92, 0x89, 0x05, 0x93, 0x64, 0xd0, 0xc8, 0x2e, 0x0a,
	0x1a, 0x71, 0xbf, 0x27, 0x0a, 0x91, 0xa4, 0x3f, 0x7c, 0x4c, 0x6d, 0x9e, 0xef, 0xde, 0x2d, 0xe7,
	0x17, 0xe4, 0xa7, 0x12, 0x43, 0x0f, 0x70, 0xd1, 0x31, 0xac, 0x1d, 0xc9, 0x72, 0x95, 0xd5, 0x9a,
	0x92, 0xc9, 0xd2, 0x65, 0x4c, 0xe6, 0xd3, 0xd1, 0xc4, 0x92, 0xab, 0xfe, 0x80, 0x38, 0xe3, 0x51,
	0xb9, 0xc0, 0xc2, 0x74, 0x18, 0x84, 0x34, 0x28, 0xd2, 0xa8, 0x6d, 0x9e, 0xcd, 0x38, 0x0a, 0x30,
	0x94, 0x08, 0x4c, 0xb3, 0x21, 0xdf, 0xac, 0xf2, 0xda, 0xf7, 0x03, 0xc8, 0x1d, 0x06, 0x6d, 0x92,
	0x0b, 0x63, 0x87, 0x40, 0xa4, 0x66, 0xcf, 0x6a, 0x69, 0xb7, 0x9c, 0x5a, 0x60, 0xf6, 0x75, 0xce,
	0x5c, 0x17, 0x78, 0xda, 0xff, 0x71, 0x83, 0x92, 0xd9, 0x5e, 0x68, 0xc1, 0xa2, 0xcf, 0x35, 0xe8,
	0x67, 0xa5, 0xc2, 0xfd, 0x2c, 0xed, 0x31, 0xf5, 0x4e, 0x7c, 0xaf, 0x37, 0x21, 0xcb, 0x3e, 0x64,
	0xcf, 0x9e, 0x43, 0x17, 0x11, 0x6e, 0x50, 0xcf, 0x74, 0x41, 0x12, 0xf8, 0x29, 0x94, 0x6a, 0x78,
	0x60, 0x4d, 0x30, 0x91, 0xb9, 0x64, 0x19, 0xf2, 0xe2, 0x53, 0xa6, 0x80, 0x72, 0x06, 0x41, 0x66,
	0x9f, 0x38, 0x43, 0xe9, 0x2c, 0xe8, 0xb7, 0xf6, 0x5b, 0x05, 0x4a, 0x4d, 0xab, 0x47, 0xa8, 0x4f,
	0x09, 0x18, 0xbc, 0xde, 0xc2, 0x89, 0xea, 0xbf, 0xe5, 0x11, 0x6c, 0x0c, 0xf7, 0x2d, 0xdb, 0x18,
	0xb0, 0xdb, 0xb9, 0xa2, 0x87, 0x41, 0xda, 0xb7, 0x0a, 0xac, 0x45, 0xb7, 0x25, 0xf7, 0xc0, 0x68,
	0x0d, 0xe2, 0xed, 0x0d, 0xce, 0x8f, 0xc6, 0x43, 0xf9, 0x84, 0x12, 0x02, 0xa1, 0x8f, 0x60, 0xed,
	0xd0, 0xea, 0xf5, 0x29, 0x8d, 0x70, 0xf8, 0x87, 0xe1, 0xfa, 0x76, 0xfe, 0x24, 0xdd, 0x7d, 0x75,
	0x4c, 0x08, 0x2d, 0xd6, 0xc5, 0x73, 0x8c, 0x68, 0x18, 0xc4, 0xc1, 0x68, 0x5b, 0x2a, 0x70, 0x51,
	0x27, 0x56, 0x1a, 0x8e, 0x50, 0xed, 0x7d, 0x28, 0x1d, 0xe1, 0x97, 0x34, 0x0e, 0xb4, 0xa7, 0x7b,
	0x33, 0xea, 0x68, 0xc5, 0x5d, 0x8e, 0x42, 0xb5, 0x26, 0x54, 0xa2, 0x47, 0x66, 0x2e, 0x5e, 0x9e,
	0xfb, 0x21, 0x64, 0xdd, 0x50, 0x80, 0xb8, 0xa0, 0x9d, 0xcb, 0xf1, 0xb4, 0xbb, 0xb0, 0xea, 0xb3,
	0x0b, 0xcc, 0xa7, 0x19, 0x98, 0x4f, 0xd3, 0xed, 0x69, 0x35, 0x50, 0x0f, 0xb1, 0x41, 0xbc, 0x33,
	0x6c, 0xf8, 0x12, 0x2e, 0x43, 0x5e, 0xa6, 0x1f, 0x1c, 0x53, 0x0e, 0x17, 0x1a, 0xe9, 0x14, 0x6e,
	0xfa, 0x5c, 0x62, 0xd5, 0xc8, 0x6b, 0x2e, 0xc1, 0x31, 0xe4, 0x4e, 0x9c, 0x81, 0xd5, 0x9d, 0x7d,
	0xb7, 0x3c, 0x65, 0x03, 0xe0, 0xb3, 0xb1, 0x43, 0xc6, 0x43, 0x96, 0x93, 0x71, 0x3b, 0x09, 0x41,
	0xb4, 0xdf, 0x29, 0x50, 0xd9, 0xed, 0xf5, 0x08, 0xee, 0xb1, 0x3c, 0x7c, 0x7c, 0xe6, 0x76, 0x89,
	0x75, 0xe6, 0xdf, 0x18, 0xea, 0xad, 0x24, 0x8c, 0xf8, 0xc5, 0x75, 0x04, 0x46, 0x4b, 0x65, 0xd6,
	0xef, 0x68, 0x39, 0x63, 0xd2, 0xc5, 0x7e, 0xa5, 0x1d, 0x05, 0xa2, 0x87, 0xf2, 0x3c, 0xe2, 0x15,
	0x25, 0x19, 0xbc, 0xf9, 0xb4, 0x2e, 0xd0, 0xb4, 0x2f, 0x00, 0x05, 0x1b, 0xf3, 0x15, 0x2d, 0xeb,
	0x1c, 0x25, 0x54, 0xe7, 0x84, 0xab, 0xff, 0x54, 0xac, 0xfa, 0x5f, 0x87, 0x5c, 0x8b, 0x17, 0xaf,
	0xa2, 0xd1, 0xc4, 0x47, 0xda, 0x2f, 0x53, 0xb0, 0xf2, 0xdc, 0x21, 0xe7, 0x98, 0x34, 0xb1, 0xeb,
	0x1a, 0x3d, 0xf6, 0xe2, 0xb8, 0xfb, 0xc2, 0xf3, 0xfb, 0xd1, 0x7c, 0x10, 0xa2, 0x4f, 0x85, 0xe9,
	0x69, 0x78, 0x92, 0xcd, 0x75, 0xd2, 0xee, 0xcb, 0xac, 0x44, 0x79, 0x90, 0xd5, 0x13, 0x70, 0xaa,
	0x74, 0x1d, 0x77, 0x31, 0x75, 0x65, 0x12, 0x95, 0xf7, 0x2a, 0xe3, 0x60, 0x6a, 0x3c, 0xac, 0xcd,
	0xc1, 0x94, 0x95, 0x65, 0x38, 0x01, 0x80, 0x2a, 0x83, 0x6e, 0x99, 0x9a, 0x19, 0x43, 0xc8, 0xf1,
	0x5e, 0x69, 0x18, 0xc6, 0x9c, 0x08, 0x5b, 0xbf, 0x86, 0x07, 0xc6, 0x4c, 0xa4, 0x23, 0x61, 0x10,
	0x95, 0x20, 0x6b, 0x68, 0xf0, 0xc0, 0xc3, 0xbe, 0xb5, 0x09, 0xdc, 0x78, 0x6e, 0x58, 0xde, 0xbe,
	0x43, 0xc2, 0xdd, 0xfa, 0x57, 0x16, 0xf6, 0x2b, 0xeb, 0xf8, 0x25, 0xdc, 0x8c, 0xae, 0x2b, 0xb4,
	0x1c, 0x48, 0x5d, 0x89, 0x48, 0xfd, 0x20, 0xde, 0xc7, 0x5f, 0xf8, 0x6e, 0x1b, 0x45, 0xd3, 0x63,
	0x64, 0x5a, 0x17, 0x56, 0x79, 0x50, 0xae, 0x4f, 0x71, 0x77, 0xec, 0x39, 0x44, 0xf4, 0x72, 0xf8,
	0x40, 0x76, 0xde, 0x15, 0x26, 0xa2, 0x38, 0x98, 0xba, 0x3d, 0x1d, 0x0f, 0x9d, 0x09, 0x36, 0x25,
	0x22, 0x17, 0x44, 0x0c, 0xaa, 0xbd, 0x0b, 0x37, 0x62, 0x8b, 0xd0, 0x03, 0x52, 0xa9, 0xd2, 0x5f,
	0x29, 0x55, 0xfa, 0xad, 0x3d, 0x02, 0xa0, 0x99, 0xab, 0xb8, 0xf1, 0x1a, 0x14, 0x0f, 0x0c, 0xaf,
	0x4f, 0xb3, 0x6d, 0x16, 0xd6, 0x14, 0xae, 0xe8, 0x30, 0x4c, 0xfb, 0x31, 0x14, 0x3f, 0x1b, 0x63,
	0x32, 0x93, 0xba, 0xba, 0x0d, 0x05, 0x9a, 0x8c, 0xdb, 0x78, 0xe0, 0xbf, 0x68, 0x04, 0x80, 0x68,
	0xc3, 0x4b, 0x26, 0xd5, 0x61, 0x90, 0x7c, 0x47, 0x4d, 0x07, 0xef, 0xa8, 0x91, 0xf7, 0x85, 0x4c,
	0xfc, 0x7d, 0xe1, 0x31, 0xac, 0x88, 0xf5, 0x03, 0x17, 0x1c, 0x7b, 0x88, 0xf5, 0xdf, 0xf0, 0x53,
	0xa1, 0x37, 0x7c, 0xed, 0x73, 0xb8, 0xed, 0x17, 0xb9, 0x2c, 0x8c, 0xc4, 0xa2, 0xfc, 0x26, 0x2c,
	0x8b, 0x4f, 0x27, 0xf0, 0x38, 0x61, 0xd0, 0x42, 0x67, 0xdd, 0x82, 0xb7, 0x16, 0x70, 0x16, 0x5b,
	0xdc, 0xf1, 0xf3, 0x2a, 0x11, 0x6b, 0xca, 0xf3, 0x6a, 0x7a, 0x16, 0xe1, 0x24, 0xa2, 0x76, 0x0a,
	0x95, 0x1a, 0x1e, 0x0d, 0x9c, 0x59, 0x6b, 0x68, 0x10, 0xaf, 0xea, 0xd8, 0x1e, 0x31, 0xba, 0xfe,
	0x0d, 0xf9, 0x5f, 0xb8, 0xe5, 0x0b, 0x91, 0xa3, 0x0d, 0xa9, 0xd3, 0x1b, 0xe1, 0xae, 0x88, 0x0b,
	0x8b, 0xa6, 0xb5, 0x87, 0xf0, 0xe6, 0x5c, 0xbe, 0x0b, 0x03, 0xda, 0x57, 0x70, 0x3d, 0x82, 0xca,
	0x1a, 0x90, 0xb1, 0x46, 0xa6, 0x92, 0x6c, 0x64, 0xca, 0xeb, 0x9e, 0x0a, 0xae, 0xfb, 0x2b, 0xdf,
	0xd3, 0xad, 0x9f, 0x28, 0x70, 0x3d, 0xf1, 0xaa, 0x8c, 0xd6, 0xe0, 0x7a, 0xe3, 0xe8, 0x74, 0xf7,
	0x69, 0xa3, 0xd6, 0x69, 0x35, 0x0e, 0x8e, 0x76, 0xdb, 0xcf, 0xf4, 0xba, 0x7a, 0x0d, 0xdd, 0x80,
	0x55, 0xff, 0x35, 0xbd, 0x65, 0xbc, 0xc0, 0xde, 0x4c, 0x55, 0x28, 0xae, 0x0f, 0x7c, 0x6a, 0x4d,
	0xb0, 0x4d, 0xcb, 0xcd, 0x14, 0xc5, 0xf5, 0x55, 0x26, 0x70, 0x33, 0x14, 0xd7, 0x07, 0xfa, 0xb8,
	0xe9, 0xad, 0xdf, 0x2b, 0x80, 0x92, 0xcf, 0xad, 0xb4, 0x3c, 0x6e, 0x50, 0x89, 0xb4, 0xa7, 0xea,
	0x35, 0x31, 0xa0, 0xd5, 0xa7, 0x9a, 0x42, 0xeb, 0x80, 0xc4, 0xa0, 0xd3, 0xea, 0x3b, 0xe3, 0x81,
	0xf9, 0xd4, 0xe9, 0x9e, 0xab, 0x69, 0x84, 0xa0, 0x24, 0xe1, 0x47, 0x0e, 0x83, 0x89, 0xba, 0x98,
	0xb7, 0x96, 0xa6, 0x2a, 0xf0, 0x2a, 0x5a, 0x0e, 0x97, 0x29, 0x5b, 0x91, 0xd2, 0xa8, 0x37, 0x69,
	0xc1, 0xde, 0x9a, 0xd9, 0xdd, 0xf6, 0x54, 0xdd, 0x40, 0x4b, 0x90, 0x39, 0x72, 0x6c, 0xac, 0x9a,
	0x5b, 0x3f, 0x82, 0x9b, 0xf3, 0x7a, 0xff, 0xb4, 0xc2, 0xa6, 0xfa, 0x1e, 0x0f, 0x0c, 0xea, 0x09,
	0x78, 0x05, 0xff, 0xec, 0xa4, 0xd3, 0x3e, 0xee, 0xd4, 0x76, 0xdb, 0x75, 0x55, 0xa1, 0x15, 0xf7,
	0xde, 0x7e, 0x5b, 0x4d, 0x51, 0xbe, 0x7b, 0xfb, 0xed, 0x4e, 0xfb, 0x73, 0x35, 0x2d, 0xcb, 0xf0,
	0x0c, 0x2a, 0x40, 0xb6, 0x6e, 0x90, 0xc1, 0x4c, 0xcd, 0x6e, 0x6d, 0x40, 0x81, 0xf1, 0x7e, 0x66,
	0x5b, 0x1e, 0x85, 0x33, 0xfb, 0x54, 0xaf, 0xa1, 0x1c, 0xa4, 0xda, 0x53, 0x55, 0xd9, 0x7a, 0x00,
	0x05, 0xbf, 0x0b, 0x49, 0x81, 0xf5, 0x2a, 0x9f, 0x6c, 0x56, 0x55, 0x85, 0x9e, 0xe0, 0xd9, 0xd1,
	0x93, 0xa3, 0xe3, 0xe7, 0x47, 0x6a, 0x77, 0xeb, 0x7b, 0xf1, 0xfe, 0x11, 0x17, 0x55, 0xbc, 0xa1,
	0xa3, 0x5e, 0x43, 0x9b, 0x70, 0x7b, 0x5e, 0x13, 0xc6, 0xc7, 0x50, 0x76, 0x7e, 0x96, 0x83, 0x12,
	0x3f, 0xf8, 0x91, 0xe3, 0x59, 0x2f, 0x2c, 0x4c, 0xd0, 0x10, 0x36, 0xfd, 0x04, 0xa1, 0x3d, 0x0d,
	0x49, 0x25, 0xf4, 0xfc, 0xfb, 0xfe, 0xc5, 0x2f, 0x27, 0xb1, 0xd7, 0xe2, 0x4a, 0x79, 0x91, 0x83,
	0x7f, 0xa4, 0xa0, 0x16, 0x14, 0x45, 0x3a, 0xc8, 0x3b, 0x07, 0xc9, 0x60, 0x10, 0x4d, 0x3e, 0x2b,
	0x9b, 0x8b, 0x11, 0xf8, 0xed, 0x7b, 0xa0, 0xa0, 0x7d, 0xc8, 0x0b, 0xef, 0x31, 0x87, 0x5f, 0xd4,
	0x63, 0x55, 0x16, 0xe6, 0xc9, 0x8f, 0x14, 0xd4, 0x86, 0x15, 0xc1, 0x9c, 0x41, 0xdc, 0x7f, 0xcf,
	0xee, 0x0e, 0xa0, 0x74, 0x42, 0x9c, 0x2e, 0x76, 0x5d, 0x59, 0x27, 0x2e, 0xf4, 0x64, 0x95, 0x37,
	0xe7, 0xcc, 0xf8, 0x6e, 0xa6, 0x03, 0x6b, 0xcf, 0x46, 0xa6, 0xe1, 0xe1, 0x78, 0x34, 0x4c, 0xee,
	0x22, 0x86, 0x51, 0xb9, 0x77, 0x19, 0x06, 0x0b, 0x76, 0x07, 0x90, 0xe7, 0x00, 0x8c, 0x16, 0x3f,
	0x19, 0x55, 0x2e, 0x7f, 0xff, 0x41, 0xa7, 0x50, 0x14, 0x8c, 0xf8, 0x1b, 0xd2, 0xc6, 0x42, 0x12,
	0x36, 0x5f, 0xb9, 0x7f, 0x29, 0x4b, 0xce, 0xa7, 0x0e, 0x99, 0x13, 0xcb, 0xee, 0xa1, 0xb7, 0x12,
	0xf8, 0xe1, 0x77, 0x8c, 0xca, 0xc6, 0xa2, 0x69, 0xce, 0x6b, 0xe7, 0xb9, 0x08, 0x87, 0xf2, 0xf4,
	0x68, 0x1f, 0xb2, 0x0c, 0x30, 0x87, 0x71, 0x38, 0x6e, 0xcf, 0x61, 0x1c, 0x09, 0xab, 0x3b, 0x7f,
	0x4b, 0x03, 0x04, 0x79, 0x30, 0xb2, 0xa1, 0x4c, 0xa3, 0x9d, 0xeb, 0x61, 0xc2, 0x2f, 0xc7, 0x73,
	0xcb, 0xeb, 0x8b, 0xb4, 0xe1, 0xbd, 0xa4, 0x46, 0x16, 0x66, 0xf6, 0x95, 0xbb, 0x17, 0x20, 0xcb,
	0xc5, 0x1f, 0x29, 0xe8, 0x98, 0x3d, 0xb6, 0x51, 0x4b, 0xf3, 0x9f, 0x1f, 0xbf, 0x9b, 0x1e, 0x7f,
	0x08, 0xd7, 0x79, 0x36, 0x1a, 0x2e, 0xa7, 0x92, 0xff, 0x61, 0x4a, 0x84, 0xba, 0x4a, 0xb2, 0xee,
	0x99, 0x9b, 0x3a, 0xfe, 0x00, 0x8a, 0x61, 0x38, 0xba, 0x77, 0x09, 0x19, 0x97, 0xc6, 0x15, 0x99,
	0x1f, 0xc3, 0x0a, 0xab, 0xc7, 0x65, 0xca, 0x3d, 0xc7, 0x0a, 0x23, 0x45, 0x45, 0xe5, 0x92, 0xf9,
	0x9d, 0x9f, 0x2b, 0x70, 0x63, 0x4e, 0x1a, 0x80, 0x46, 0xf3, 0xc1, 0xef, 0xcd, 0x71, 0x45, 0x8b,
	0x72, 0x93, 0xca, 0x7f, 0x5f, 0x0d, 0x59, 0xd8, 0xd9, 0xd7, 0x4a, 0xe8, 0x0f, 0x6f, 0x2d, 0x4c,
	0x26, 0x56, 0x17, 0xa3, 0x29, 0xac, 0x09, 0x5f, 0x17, 0x4d, 0xac, 0xe6, 0xb8, 0xef, 0x8b, 0x72,
	0xba, 0xca, 0xf6, 0x55, 0xd1, 0xa5, 0xdd, 0x9d, 0xe5, 0xd8, 0x5f, 0x4e, 0x3f, 0xfc, 0x57, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x01, 0x2f, 0x09, 0xc2, 0x8b, 0x2a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommitNotifierClient is the client API for CommitNotifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommitNotifierClient interface {
	// auditor
	SubscribeTxCommitEventByClientID(ctx context.Context, in *CommitEventRequestByClientID, opts ...grpc.CallOption) (CommitNotifier_SubscribeTxCommitEventByClientIDClient, error)
	MigrateState(ctx context.Context, opts ...grpc.CallOption) (CommitNotifier_MigrateStateClient, error)
	// orderer
	Deliver(ctx context.Context, in *DeliverRequest, opts ...grpc.CallOption) (CommitNotifier_DeliverClient, error)
	MigrateBlocks(ctx context.Context, opts ...grpc.CallOption) (CommitNotifier_MigrateBlocksClient, error)
	// executor
	ProcessMCBlock(ctx context.Context, in *MCBlock, opts ...grpc.CallOption) (*MCResponse, error)
	UpdateActiveExecutors(ctx context.Context, in *ActiveExecutors, opts ...grpc.CallOption) (*ActiveExecutorsResp, error)
	Execute(ctx context.Context, in *Proposal, opts ...grpc.CallOption) (*ProposalResponse, error)
	ExecuteBatch(ctx context.Context, in *ProposalBatch, opts ...grpc.CallOption) (*ProposalResponseBatch, error)
	Ping(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
}

type commitNotifierClient struct {
	cc *grpc.ClientConn
}

func NewCommitNotifierClient(cc *grpc.ClientConn) CommitNotifierClient {
	return &commitNotifierClient{cc}
}

func (c *commitNotifierClient) SubscribeTxCommitEventByClientID(ctx context.Context, in *CommitEventRequestByClientID, opts ...grpc.CallOption) (CommitNotifier_SubscribeTxCommitEventByClientIDClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CommitNotifier_serviceDesc.Streams[0], "/bsp_transaction.CommitNotifier/SubscribeTxCommitEventByClientID", opts...)
	if err != nil {
		return nil, err
	}
	x := &commitNotifierSubscribeTxCommitEventByClientIDClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CommitNotifier_SubscribeTxCommitEventByClientIDClient interface {
	Recv() (*TxEvent, error)
	grpc.ClientStream
}

type commitNotifierSubscribeTxCommitEventByClientIDClient struct {
	grpc.ClientStream
}

func (x *commitNotifierSubscribeTxCommitEventByClientIDClient) Recv() (*TxEvent, error) {
	m := new(TxEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *commitNotifierClient) MigrateState(ctx context.Context, opts ...grpc.CallOption) (CommitNotifier_MigrateStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CommitNotifier_serviceDesc.Streams[1], "/bsp_transaction.CommitNotifier/MigrateState", opts...)
	if err != nil {
		return nil, err
	}
	x := &commitNotifierMigrateStateClient{stream}
	return x, nil
}

type CommitNotifier_MigrateStateClient interface {
	Send(*MigrateRequest) error
	CloseAndRecv() (*MigrateResponse, error)
	grpc.ClientStream
}

type commitNotifierMigrateStateClient struct {
	grpc.ClientStream
}

func (x *commitNotifierMigrateStateClient) Send(m *MigrateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *commitNotifierMigrateStateClient) CloseAndRecv() (*MigrateResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(MigrateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *commitNotifierClient) Deliver(ctx context.Context, in *DeliverRequest, opts ...grpc.CallOption) (CommitNotifier_DeliverClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CommitNotifier_serviceDesc.Streams[2], "/bsp_transaction.CommitNotifier/Deliver", opts...)
	if err != nil {
		return nil, err
	}
	x := &commitNotifierDeliverClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CommitNotifier_DeliverClient interface {
	Recv() (*ECBlock, error)
	grpc.ClientStream
}

type commitNotifierDeliverClient struct {
	grpc.ClientStream
}

func (x *commitNotifierDeliverClient) Recv() (*ECBlock, error) {
	m := new(ECBlock)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *commitNotifierClient) MigrateBlocks(ctx context.Context, opts ...grpc.CallOption) (CommitNotifier_MigrateBlocksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CommitNotifier_serviceDesc.Streams[3], "/bsp_transaction.CommitNotifier/MigrateBlocks", opts...)
	if err != nil {
		return nil, err
	}
	x := &commitNotifierMigrateBlocksClient{stream}
	return x, nil
}

type CommitNotifier_MigrateBlocksClient interface {
	Send(*MigrateRequest) error
	CloseAndRecv() (*MigrateResponse, error)
	grpc.ClientStream
}

type commitNotifierMigrateBlocksClient struct {
	grpc.ClientStream
}

func (x *commitNotifierMigrateBlocksClient) Send(m *MigrateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *commitNotifierMigrateBlocksClient) CloseAndRecv() (*MigrateResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(MigrateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *commitNotifierClient) ProcessMCBlock(ctx context.Context, in *MCBlock, opts ...grpc.CallOption) (*MCResponse, error) {
	out := new(MCResponse)
	err := c.cc.Invoke(ctx, "/bsp_transaction.CommitNotifier/ProcessMCBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commitNotifierClient) UpdateActiveExecutors(ctx context.Context, in *ActiveExecutors, opts ...grpc.CallOption) (*ActiveExecutorsResp, error) {
	out := new(ActiveExecutorsResp)
	err := c.cc.Invoke(ctx, "/bsp_transaction.CommitNotifier/UpdateActiveExecutors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commitNotifierClient) Execute(ctx context.Context, in *Proposal, opts ...grpc.CallOption) (*ProposalResponse, error) {
	out := new(ProposalResponse)
	err := c.cc.Invoke(ctx, "/bsp_transaction.CommitNotifier/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commitNotifierClient) ExecuteBatch(ctx context.Context, in *ProposalBatch, opts ...grpc.CallOption) (*ProposalResponseBatch, error) {
	out := new(ProposalResponseBatch)
	err := c.cc.Invoke(ctx, "/bsp_transaction.CommitNotifier/ExecuteBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commitNotifierClient) Ping(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/bsp_transaction.CommitNotifier/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommitNotifierServer is the server API for CommitNotifier service.
type CommitNotifierServer interface {
	// auditor
	SubscribeTxCommitEventByClientID(*CommitEventRequestByClientID, CommitNotifier_SubscribeTxCommitEventByClientIDServer) error
	MigrateState(CommitNotifier_MigrateStateServer) error
	// orderer
	Deliver(*DeliverRequest, CommitNotifier_DeliverServer) error
	MigrateBlocks(CommitNotifier_MigrateBlocksServer) error
	// executor
	ProcessMCBlock(context.Context, *MCBlock) (*MCResponse, error)
	UpdateActiveExecutors(context.Context, *ActiveExecutors) (*ActiveExecutorsResp, error)
	Execute(context.Context, *Proposal) (*ProposalResponse, error)
	ExecuteBatch(context.Context, *ProposalBatch) (*ProposalResponseBatch, error)
	Ping(context.Context, *HelloRequest) (*HelloResponse, error)
}

// UnimplementedCommitNotifierServer can be embedded to have forward compatible implementations.
type UnimplementedCommitNotifierServer struct {
}

func (*UnimplementedCommitNotifierServer) SubscribeTxCommitEventByClientID(req *CommitEventRequestByClientID, srv CommitNotifier_SubscribeTxCommitEventByClientIDServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeTxCommitEventByClientID not implemented")
}
func (*UnimplementedCommitNotifierServer) MigrateState(srv CommitNotifier_MigrateStateServer) error {
	return status.Errorf(codes.Unimplemented, "method MigrateState not implemented")
}
func (*UnimplementedCommitNotifierServer) Deliver(req *DeliverRequest, srv CommitNotifier_DeliverServer) error {
	return status.Errorf(codes.Unimplemented, "method Deliver not implemented")
}
func (*UnimplementedCommitNotifierServer) MigrateBlocks(srv CommitNotifier_MigrateBlocksServer) error {
	return status.Errorf(codes.Unimplemented, "method MigrateBlocks not implemented")
}
func (*UnimplementedCommitNotifierServer) ProcessMCBlock(ctx context.Context, req *MCBlock) (*MCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessMCBlock not implemented")
}
func (*UnimplementedCommitNotifierServer) UpdateActiveExecutors(ctx context.Context, req *ActiveExecutors) (*ActiveExecutorsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateActiveExecutors not implemented")
}
func (*UnimplementedCommitNotifierServer) Execute(ctx context.Context, req *Proposal) (*ProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}
func (*UnimplementedCommitNotifierServer) ExecuteBatch(ctx context.Context, req *ProposalBatch) (*ProposalResponseBatch, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteBatch not implemented")
}
func (*UnimplementedCommitNotifierServer) Ping(ctx context.Context, req *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}

func RegisterCommitNotifierServer(s *grpc.Server, srv CommitNotifierServer) {
	s.RegisterService(&_CommitNotifier_serviceDesc, srv)
}

func _CommitNotifier_SubscribeTxCommitEventByClientID_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CommitEventRequestByClientID)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CommitNotifierServer).SubscribeTxCommitEventByClientID(m, &commitNotifierSubscribeTxCommitEventByClientIDServer{stream})
}

type CommitNotifier_SubscribeTxCommitEventByClientIDServer interface {
	Send(*TxEvent) error
	grpc.ServerStream
}

type commitNotifierSubscribeTxCommitEventByClientIDServer struct {
	grpc.ServerStream
}

func (x *commitNotifierSubscribeTxCommitEventByClientIDServer) Send(m *TxEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _CommitNotifier_MigrateState_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CommitNotifierServer).MigrateState(&commitNotifierMigrateStateServer{stream})
}

type CommitNotifier_MigrateStateServer interface {
	SendAndClose(*MigrateResponse) error
	Recv() (*MigrateRequest, error)
	grpc.ServerStream
}

type commitNotifierMigrateStateServer struct {
	grpc.ServerStream
}

func (x *commitNotifierMigrateStateServer) SendAndClose(m *MigrateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *commitNotifierMigrateStateServer) Recv() (*MigrateRequest, error) {
	m := new(MigrateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CommitNotifier_Deliver_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeliverRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CommitNotifierServer).Deliver(m, &commitNotifierDeliverServer{stream})
}

type CommitNotifier_DeliverServer interface {
	Send(*ECBlock) error
	grpc.ServerStream
}

type commitNotifierDeliverServer struct {
	grpc.ServerStream
}

func (x *commitNotifierDeliverServer) Send(m *ECBlock) error {
	return x.ServerStream.SendMsg(m)
}

func _CommitNotifier_MigrateBlocks_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CommitNotifierServer).MigrateBlocks(&commitNotifierMigrateBlocksServer{stream})
}

type CommitNotifier_MigrateBlocksServer interface {
	SendAndClose(*MigrateResponse) error
	Recv() (*MigrateRequest, error)
	grpc.ServerStream
}

type commitNotifierMigrateBlocksServer struct {
	grpc.ServerStream
}

func (x *commitNotifierMigrateBlocksServer) SendAndClose(m *MigrateResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *commitNotifierMigrateBlocksServer) Recv() (*MigrateRequest, error) {
	m := new(MigrateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CommitNotifier_ProcessMCBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MCBlock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommitNotifierServer).ProcessMCBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.CommitNotifier/ProcessMCBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommitNotifierServer).ProcessMCBlock(ctx, req.(*MCBlock))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommitNotifier_UpdateActiveExecutors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActiveExecutors)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommitNotifierServer).UpdateActiveExecutors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.CommitNotifier/UpdateActiveExecutors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommitNotifierServer).UpdateActiveExecutors(ctx, req.(*ActiveExecutors))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommitNotifier_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Proposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommitNotifierServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.CommitNotifier/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommitNotifierServer).Execute(ctx, req.(*Proposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommitNotifier_ExecuteBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProposalBatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommitNotifierServer).ExecuteBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.CommitNotifier/ExecuteBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommitNotifierServer).ExecuteBatch(ctx, req.(*ProposalBatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommitNotifier_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommitNotifierServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.CommitNotifier/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommitNotifierServer).Ping(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommitNotifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bsp_transaction.CommitNotifier",
	HandlerType: (*CommitNotifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessMCBlock",
			Handler:    _CommitNotifier_ProcessMCBlock_Handler,
		},
		{
			MethodName: "UpdateActiveExecutors",
			Handler:    _CommitNotifier_UpdateActiveExecutors_Handler,
		},
		{
			MethodName: "Execute",
			Handler:    _CommitNotifier_Execute_Handler,
		},
		{
			MethodName: "ExecuteBatch",
			Handler:    _CommitNotifier_ExecuteBatch_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _CommitNotifier_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeTxCommitEventByClientID",
			Handler:       _CommitNotifier_SubscribeTxCommitEventByClientID_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MigrateState",
			Handler:       _CommitNotifier_MigrateState_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Deliver",
			Handler:       _CommitNotifier_Deliver_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MigrateBlocks",
			Handler:       _CommitNotifier_MigrateBlocks_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "bsp_transaction.proto",
}

// QueryExecutorClient is the client API for QueryExecutor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryExecutorClient interface {
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
}

type queryExecutorClient struct {
	cc *grpc.ClientConn
}

func NewQueryExecutorClient(cc *grpc.ClientConn) QueryExecutorClient {
	return &queryExecutorClient{cc}
}

func (c *queryExecutorClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/bsp_transaction.QueryExecutor/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryExecutorServer is the server API for QueryExecutor service.
type QueryExecutorServer interface {
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
}

// UnimplementedQueryExecutorServer can be embedded to have forward compatible implementations.
type UnimplementedQueryExecutorServer struct {
}

func (*UnimplementedQueryExecutorServer) Query(ctx context.Context, req *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}

func RegisterQueryExecutorServer(s *grpc.Server, srv QueryExecutorServer) {
	s.RegisterService(&_QueryExecutor_serviceDesc, srv)
}

func _QueryExecutor_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryExecutorServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.QueryExecutor/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryExecutorServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryExecutor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bsp_transaction.QueryExecutor",
	HandlerType: (*QueryExecutorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _QueryExecutor_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bsp_transaction.proto",
}

// AggregatorClient is the client API for Aggregator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AggregatorClient interface {
	RegisterClientWithPolicy(ctx context.Context, in *AggregatorSubscribeRequest, opts ...grpc.CallOption) (Aggregator_RegisterClientWithPolicyClient, error)
	ProcessProposal(ctx context.Context, in *Proposal, opts ...grpc.CallOption) (*ProposalResponse, error)
	SubmitTransaction(ctx context.Context, in *SmartContractArgs, opts ...grpc.CallOption) (*WaitForEventResponse, error)
	WaitForEvent(ctx context.Context, in *WaitForEventRequest, opts ...grpc.CallOption) (*WaitForEventResponse, error)
	StartWorkload(ctx context.Context, in *WorkerMessage, opts ...grpc.CallOption) (*WorkerMessage, error)
}

type aggregatorClient struct {
	cc *grpc.ClientConn
}

func NewAggregatorClient(cc *grpc.ClientConn) AggregatorClient {
	return &aggregatorClient{cc}
}

func (c *aggregatorClient) RegisterClientWithPolicy(ctx context.Context, in *AggregatorSubscribeRequest, opts ...grpc.CallOption) (Aggregator_RegisterClientWithPolicyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Aggregator_serviceDesc.Streams[0], "/bsp_transaction.Aggregator/RegisterClientWithPolicy", opts...)
	if err != nil {
		return nil, err
	}
	x := &aggregatorRegisterClientWithPolicyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Aggregator_RegisterClientWithPolicyClient interface {
	Recv() (*AggregatorResponse, error)
	grpc.ClientStream
}

type aggregatorRegisterClientWithPolicyClient struct {
	grpc.ClientStream
}

func (x *aggregatorRegisterClientWithPolicyClient) Recv() (*AggregatorResponse, error) {
	m := new(AggregatorResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aggregatorClient) ProcessProposal(ctx context.Context, in *Proposal, opts ...grpc.CallOption) (*ProposalResponse, error) {
	out := new(ProposalResponse)
	err := c.cc.Invoke(ctx, "/bsp_transaction.Aggregator/ProcessProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aggregatorClient) SubmitTransaction(ctx context.Context, in *SmartContractArgs, opts ...grpc.CallOption) (*WaitForEventResponse, error) {
	out := new(WaitForEventResponse)
	err := c.cc.Invoke(ctx, "/bsp_transaction.Aggregator/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aggregatorClient) WaitForEvent(ctx context.Context, in *WaitForEventRequest, opts ...grpc.CallOption) (*WaitForEventResponse, error) {
	out := new(WaitForEventResponse)
	err := c.cc.Invoke(ctx, "/bsp_transaction.Aggregator/WaitForEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aggregatorClient) StartWorkload(ctx context.Context, in *WorkerMessage, opts ...grpc.CallOption) (*WorkerMessage, error) {
	out := new(WorkerMessage)
	err := c.cc.Invoke(ctx, "/bsp_transaction.Aggregator/StartWorkload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AggregatorServer is the server API for Aggregator service.
type AggregatorServer interface {
	RegisterClientWithPolicy(*AggregatorSubscribeRequest, Aggregator_RegisterClientWithPolicyServer) error
	ProcessProposal(context.Context, *Proposal) (*ProposalResponse, error)
	SubmitTransaction(context.Context, *SmartContractArgs) (*WaitForEventResponse, error)
	WaitForEvent(context.Context, *WaitForEventRequest) (*WaitForEventResponse, error)
	StartWorkload(context.Context, *WorkerMessage) (*WorkerMessage, error)
}

// UnimplementedAggregatorServer can be embedded to have forward compatible implementations.
type UnimplementedAggregatorServer struct {
}

func (*UnimplementedAggregatorServer) RegisterClientWithPolicy(req *AggregatorSubscribeRequest, srv Aggregator_RegisterClientWithPolicyServer) error {
	return status.Errorf(codes.Unimplemented, "method RegisterClientWithPolicy not implemented")
}
func (*UnimplementedAggregatorServer) ProcessProposal(ctx context.Context, req *Proposal) (*ProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessProposal not implemented")
}
func (*UnimplementedAggregatorServer) SubmitTransaction(ctx context.Context, req *SmartContractArgs) (*WaitForEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTransaction not implemented")
}
func (*UnimplementedAggregatorServer) WaitForEvent(ctx context.Context, req *WaitForEventRequest) (*WaitForEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WaitForEvent not implemented")
}
func (*UnimplementedAggregatorServer) StartWorkload(ctx context.Context, req *WorkerMessage) (*WorkerMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartWorkload not implemented")
}

func RegisterAggregatorServer(s *grpc.Server, srv AggregatorServer) {
	s.RegisterService(&_Aggregator_serviceDesc, srv)
}

func _Aggregator_RegisterClientWithPolicy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AggregatorSubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AggregatorServer).RegisterClientWithPolicy(m, &aggregatorRegisterClientWithPolicyServer{stream})
}

type Aggregator_RegisterClientWithPolicyServer interface {
	Send(*AggregatorResponse) error
	grpc.ServerStream
}

type aggregatorRegisterClientWithPolicyServer struct {
	grpc.ServerStream
}

func (x *aggregatorRegisterClientWithPolicyServer) Send(m *AggregatorResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Aggregator_ProcessProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Proposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AggregatorServer).ProcessProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.Aggregator/ProcessProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AggregatorServer).ProcessProposal(ctx, req.(*Proposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Aggregator_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SmartContractArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AggregatorServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.Aggregator/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AggregatorServer).SubmitTransaction(ctx, req.(*SmartContractArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Aggregator_WaitForEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitForEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AggregatorServer).WaitForEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.Aggregator/WaitForEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AggregatorServer).WaitForEvent(ctx, req.(*WaitForEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Aggregator_StartWorkload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AggregatorServer).StartWorkload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.Aggregator/StartWorkload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AggregatorServer).StartWorkload(ctx, req.(*WorkerMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Aggregator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bsp_transaction.Aggregator",
	HandlerType: (*AggregatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessProposal",
			Handler:    _Aggregator_ProcessProposal_Handler,
		},
		{
			MethodName: "SubmitTransaction",
			Handler:    _Aggregator_SubmitTransaction_Handler,
		},
		{
			MethodName: "WaitForEvent",
			Handler:    _Aggregator_WaitForEvent_Handler,
		},
		{
			MethodName: "StartWorkload",
			Handler:    _Aggregator_StartWorkload_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RegisterClientWithPolicy",
			Handler:       _Aggregator_RegisterClientWithPolicy_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bsp_transaction.proto",
}

// DeploySmartContractClient is the client API for DeploySmartContract service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeploySmartContractClient interface {
	DeploySmartContract(ctx context.Context, in *DeploySmartContractRequest, opts ...grpc.CallOption) (*DeploySmartContractResponse, error)
}

type deploySmartContractClient struct {
	cc *grpc.ClientConn
}

func NewDeploySmartContractClient(cc *grpc.ClientConn) DeploySmartContractClient {
	return &deploySmartContractClient{cc}
}

func (c *deploySmartContractClient) DeploySmartContract(ctx context.Context, in *DeploySmartContractRequest, opts ...grpc.CallOption) (*DeploySmartContractResponse, error) {
	out := new(DeploySmartContractResponse)
	err := c.cc.Invoke(ctx, "/bsp_transaction.DeploySmartContract/DeploySmartContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeploySmartContractServer is the server API for DeploySmartContract service.
type DeploySmartContractServer interface {
	DeploySmartContract(context.Context, *DeploySmartContractRequest) (*DeploySmartContractResponse, error)
}

// UnimplementedDeploySmartContractServer can be embedded to have forward compatible implementations.
type UnimplementedDeploySmartContractServer struct {
}

func (*UnimplementedDeploySmartContractServer) DeploySmartContract(ctx context.Context, req *DeploySmartContractRequest) (*DeploySmartContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeploySmartContract not implemented")
}

func RegisterDeploySmartContractServer(s *grpc.Server, srv DeploySmartContractServer) {
	s.RegisterService(&_DeploySmartContract_serviceDesc, srv)
}

func _DeploySmartContract_DeploySmartContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeploySmartContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploySmartContractServer).DeploySmartContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bsp_transaction.DeploySmartContract/DeploySmartContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploySmartContractServer).DeploySmartContract(ctx, req.(*DeploySmartContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeploySmartContract_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bsp_transaction.DeploySmartContract",
	HandlerType: (*DeploySmartContractServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeploySmartContract",
			Handler:    _DeploySmartContract_DeploySmartContract_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bsp_transaction.proto",
}

// MainchainServiceClient is the client API for MainchainService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MainchainServiceClient interface {
	DeliverMainchainBlock(ctx context.Context, in *MainchainBlockDeliverRequest, opts ...grpc.CallOption) (MainchainService_DeliverMainchainBlockClient, error)
}

type mainchainServiceClient struct {
	cc *grpc.ClientConn
}

func NewMainchainServiceClient(cc *grpc.ClientConn) MainchainServiceClient {
	return &mainchainServiceClient{cc}
}

func (c *mainchainServiceClient) DeliverMainchainBlock(ctx context.Context, in *MainchainBlockDeliverRequest, opts ...grpc.CallOption) (MainchainService_DeliverMainchainBlockClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MainchainService_serviceDesc.Streams[0], "/bsp_transaction.MainchainService/DeliverMainchainBlock", opts...)
	if err != nil {
		return nil, err
	}
	x := &mainchainServiceDeliverMainchainBlockClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MainchainService_DeliverMainchainBlockClient interface {
	Recv() (*MainchainBlockDeliverResponse, error)
	grpc.ClientStream
}

type mainchainServiceDeliverMainchainBlockClient struct {
	grpc.ClientStream
}

func (x *mainchainServiceDeliverMainchainBlockClient) Recv() (*MainchainBlockDeliverResponse, error) {
	m := new(MainchainBlockDeliverResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MainchainServiceServer is the server API for MainchainService service.
type MainchainServiceServer interface {
	DeliverMainchainBlock(*MainchainBlockDeliverRequest, MainchainService_DeliverMainchainBlockServer) error
}

// UnimplementedMainchainServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMainchainServiceServer struct {
}

func (*UnimplementedMainchainServiceServer) DeliverMainchainBlock(req *MainchainBlockDeliverRequest, srv MainchainService_DeliverMainchainBlockServer) error {
	return status.Errorf(codes.Unimplemented, "method DeliverMainchainBlock not implemented")
}

func RegisterMainchainServiceServer(s *grpc.Server, srv MainchainServiceServer) {
	s.RegisterService(&_MainchainService_serviceDesc, srv)
}

func _MainchainService_DeliverMainchainBlock_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MainchainBlockDeliverRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MainchainServiceServer).DeliverMainchainBlock(m, &mainchainServiceDeliverMainchainBlockServer{stream})
}

type MainchainService_DeliverMainchainBlockServer interface {
	Send(*MainchainBlockDeliverResponse) error
	grpc.ServerStream
}

type mainchainServiceDeliverMainchainBlockServer struct {
	grpc.ServerStream
}

func (x *mainchainServiceDeliverMainchainBlockServer) Send(m *MainchainBlockDeliverResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MainchainService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bsp_transaction.MainchainService",
	HandlerType: (*MainchainServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DeliverMainchainBlock",
			Handler:       _MainchainService_DeliverMainchainBlock_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bsp_transaction.proto",
}
